#task1~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
По данному целому числу N распечатайте все квадраты натуральных чисел,
не превосходящие N, в порядке возрастания.
"""
user_numb = int(input('Введите ваше число'))
i = 1 #счетчик
while i ** 2 <= n:
    print(i ** 2)
    i += 1
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Дано целое число, не меньшее 2.
Выведите его наименьший натуральный делитель, отличный от 1.
"""
user_numb = int(input('Введите ваше число'))
i = 2
while n % i != 0:
    i += 1
    print(i)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#task3~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
По данному натуральному числу N найдите наибольшую целую степень двойки,
не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""
user_numb = int(input())
two_in_power = 2
power = 1
while two_in_power <= n:
    two_in_power *= 2
    power += 1
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task4~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
В первый день спортсмен пробежал x километров,
а затем он каждый день увеличивал пробег на 10% от предыдущего значения.
По данному числу y определите номер дня,
на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y
и должна вывести одно натуральное число.
"""
first_km_border = int(input('Введите пройденное количество километров'))
last_km_border = int(input('Введите крайнее количетсво километров '))
i = 1
while first_km_border < last_km_border:
    first_km_border *= 1.1
    i += 1
    print(i)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task5~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов,
после чего дробная часть копеек отбрасывается. Определите,
через сколько лет вклад составит не менее y рублей.

Выражение «дробная часть копеек отбрасывается» означает,
что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек,
то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.

Программа получает на вход три натуральных числа: x, p, y
и должна вывести одно целое число.


"""
start_count_money= int(input('Введите объем первоначального вклада'))
percent = int(input('Введите объем процентов'))
wanted_count = int(input('Введите желаемый результат'))
i = 0
while start_count_money < y:
    start_count_money *= 1 + p / 100
    start_count_money = int(100 * start_count_money) / 100
    i += 1
    print(i)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#task6~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Программа получает на вход последовательность целых неотрицательных чисел,
каждое число записано в отдельной строке. Последовательность завершается числом 0,
при считывании которого программа должна закончить свою работу
и вывести количество членов последовательности (не считая завершающего числа 0).
Числа, следующие за числом 0, считывать не нужно.
"""
count = 0
while int(input('Введите ваше число')) != 0:
    count += 1
print(count)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task7~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Определите сумму всех элементов последовательности, завершающейся числом 0.
В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""
sum = 0
user_data_numb = int(input('Введите ваше число'))
while user_data_numb != 0:
    sum += user_data_numb
    user_data_numb = int(input('Введите ваше число'))
print(sum)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task8~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""
sum = 0
count = 0
user_data_numb = int(input('Введите ваше число'))
while user_data_numb != 0:
    sum += user_data_numb
    count += 1
    user_data_numb = int(input('Введите ваше число'))
print(sum / count)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#task9~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите значение наибольшего элемента последовательности.
"""
max = 0
user_data_numb = -1
while user_data_numb != 0:
    user_data_numb = int(input('Введите ваше число'))
        if user_data_numb > max:
            max = element
print(max)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task10~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите индекс наибольшего элемента последовательности.
Если наибольших элементов несколько, выведите индекс первого из них.
Нумерация элементов начинается с нуля.
"""
max = 0
numb_of_max = -1
user_data_numb = -1
count = 0
while user_data_numb != 0:
    user_data_numb = int(input('Введите ваше число'))
    if user_data_numb > max:
        max = user_data_numb
        numb_of_max = count
        count += 1
print(numb_of_max)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task11~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""
count = -1
user_data_numb = -1
while user_data_numb != 0:
    user_data_numb = int(input('Введите ваше число'))
    if user_data_numb % 2 == 0:
        count += 1
print(count)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task12~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""
count_of_biggest = 0
while prvius != 0:
    next = int(input('Введите ваше число'))
    if next != 0 and prvius < next:
        count_of_biggest += 1
        prvius = next
print(count_of_biggest)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task13~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0.
Определите значение второго по величине элемента в этой последовательности.
Гарантируется, что в последовательности есть хотя бы два элемента.
"""
usr_first_max = int(input('Введите первое число'))
usr_second_max = int(input('Введите второе число'))
if usr_first_max < usr_second_max:
    usr_first_max, usr_second_max = usr_second_max, usr_first_max
    user_data_numb = int(input('Введите число'))
while user_data_numb != 0:
    if user_data_numb > usr_first_max:
        usr_second_max, usr_first_max = usr_first_max, user_data_numb
    elif user_data_numb > usr_second_max:
        usr_second_max = user_data_numb
        user_data_numb = int(input('Введите число'))
print(usr_second_max)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task14~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""
max = 0
numb_of_max = 0
user_data_numb = -1
while user_data_numb != 0:
    user_data_numb = int(input('Введите ваше число'))
    if user_data_numb > max:
        max, numb_of_max = user_data_numb, 1
    elif user_data_numb == max:
        numb_of_max += 1
print(numb_of_max)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


#task15~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""
user_data_numb = int(input('Введите ваше число'))
if user_data_numb == 0:
    print(0)
else:
    first_num, second_num = 0, 1
for i in range(2, user_data_numb + 1):
    first_num, second_num = second_num, first_num + second_num
print(second_num)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task16~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является,
то есть выведите такое число n, что φn = A. Если А не является числом Фибоначчи,
выведите число -1.
"""
user_data_numb = int(input('Введите ваше число'))
if user_data_numb == 0:
    print(0)
    else:
        prev_numb, next_numb = 0, 1
count = 1
while next_numb <= user_data_numb:
    if next_numb == user_data_numb:
        print(count)
        break
        prev_numb, next_numb = next_numb, prev_numb + next_numb
        count += 1
    else:
        print(-1)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#task17~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"""
Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите, какое наибольшее число подряд идущих элементов этой последовательности
равны друг другу.
"""
previous_numb = -1
curr_numb = 0
maxi_numb = 0
user_data_numb = int(input(''))
while user_data_numb != 0:
    if previous_numb == user_data_numb:
        curr_numb += 1
    else:
        previous_numb = user_data_numb
        maxi_numb = max(maxi_numb, curr_numb)
        curr_numb = 1
        user_data_numb = int(input(''))
        maxi_numb = max(maxi_numb, curr_numb)
print(maxi_numb)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
