#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""



n = int(input())
i = 1

while i*i <= n:
    print(i*i)
    i += 1

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""



n = int(input())
i = 2

while n%i != 0:
    i += 1
print(i)

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""



n = int(input())
pow = 1
i = 0

while pow <= n:
    i += 1
    pow *= 2
print(i - 1, pow // 2)

#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""



x = float(input())
y = float(input())
i = 1

while x < y:
    x *= 1.1
    i += 1
print(i)

#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается. Определите, через сколько лет вклад составит не менее y рублей.

Выражение «дробная часть копеек отбрасывается» означает, что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.

Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""



x = int(input())
p = int(input())
y = int(input())
i = 0

while x < y:
    x = int(x * (1 + (p/100)) * 100) /100
    i += 1
print(i)

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""



number = 1
sum = 0

while number != 0:
    number = int(input())
    sum += number
print(sum)

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""



number = 1
sum = 0

while number != 0:
    number = int(input())
    sum += number
print(sum)

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""



number = 1
sum = 0
i = 0

while number != 0:
    number = int(input())
    sum += number
    i += 1
i -= 1
print(sum/i)

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение наибольшего элемента последовательности.
"""



number = 1
max = 0

while number != 0:
    number = int(input())
    if number > max:
        max = number

print(max)

#-----------------------------------------------------------------


#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите индекс наибольшего элемента последовательности. Если наибольших элементов несколько, выведите индекс первого из них. Нумерация элементов начинается с нуля.
"""



number = 1
max = 0
i = 0
index = 0

while number != 0:
    number = int(input())
    if number > max:
        max = number
        index = i
    i += 1
print(index)

#-----------------------------------------------------------------


#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""



number = 1
max = 0
count = 0

while number != 0:
    number = int(input())
    if number % 2 == 0 and number != 0:
        count += 1
print(count)

#-----------------------------------------------------------------


#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""



number = 1
prev = 0
i = 0

while number != 0:
    number = int(input())
    if number > prev:
        if prev != 0:
            i += 1
    prev = number
print(i)

#-----------------------------------------------------------------


#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. Определите значение второго по величине элемента в этой последовательности. Гарантируется, что в последовательности есть хотя бы два элемента.
"""



number = 1
first = 0
second = 0

while number != 0:
    number = int(input())
    if number > first:
        second = first
        first = number
    elif number > second:
        second = number
print(second)

#-----------------------------------------------------------------


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""



number = 1
max = 0
i = 1

while number != 0:
    number = int(input())
    if number > max:
        i = 1
        max = number
    elif number == max:
        i += 1
print(i)

#-----------------------------------------------------------------


#task15------------------------------------------------------------
"""
По данному числу n определите n-е число Фибоначчи.

Эту задачу можно решать и циклом for.
"""



i = 0
n_1 = 1
n_2 = 0
n = 0
count = int(input()) - 1

for i in range(0, count):
    n = n_1 + n_2
    n_2 = n_1
    n_1 = n
if count == 0:
    n = 1
print(n)

#-----------------------------------------------------------------


#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что Фn = A. Если А не является числом Фибоначчи, выведите число -1.
"""



a = int(input())
i = 0

n_2, n_1 = 0, 1
while True:
    if n_1 > a:
        i = -1
        break
    elif n_1 == a:
        i += 1
        break
    n_2, n_1 = n_1, n_2 + n_1
    i += 1
print(i)

#-----------------------------------------------------------------


#task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""



number = 1
i = 1
prev_i = 0
prev = 0

while True:
    number = int(input())
    if number == 0:
        break
    if number == prev:
        i += 1
    else:
        i = 1
    if i > prev_i:
        prev_i = i
    prev = number
print(prev_i)

#-----------------------------------------------------------------


#task18------------------------------------------------------------
"""
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""



number = 1
n = 0
sum_elements = 0
sum_square_elements = 0
s = 0

while True:
    number = int(input())
    if number == 0:
        break
    sum_elements += number
    sum_square_elements += number**2
    n += 1

standart_deviation = ((sum_square_elements - (2 * (sum_elements ** 2))/n + n*(sum_elements/n)**2)/(n-1))**0.5
print(standart_deviation)

#-----------------------------------------------------------------


