#task1------------------------------------------------------------
"""
Умова: Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
"""
A = input().split()
for i in range(len(A)):
    A[i] = int(A[i])

print(' '.join([str(j) for j in A[0::2]]))

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Умова: Выведите все четные элементы списка. При этом используйте цикл for, перебирающий элементы списка, а не их индексы!
"""

A = input().split()
for i in A:
    if int(i) % 2 == 0:
        print(end =' ' +i)

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
Умова: Дан список чисел. Выведите все элементы списка, которые больше предыдущего элемента.
"""

numbers = input().split()
for i in range(len(numbers)):
    if int(numbers[i])>int(numbers[i-1]) and i!=0:
        print(numbers[i])


#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
Умова: Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа. Если соседних элементов одного знака нет — не выводите ничего. Если таких пар соседей несколько — выведите первую пару.
"""

A = [int(number) for number in input().split()]
for number in range(1, len(A)):
   if A[number] * A[number - 1] >= 0:
        print(A[number - 1])
        print(A[number])
        break

#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
Умова: Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей, и выведите количество таких элементов. Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
"""

A = [int(number) for number in input().split()]
sum = 0

for number in range(1, len(A) - 1):
    if A[number] > A[number - 1] and A[number] > A[number + 1]:
        sum += 1
print(sum)

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Умова: Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке. Если наибольших элементов несколько, выведите индекс первого из них.
"""

A = [int(number) for number in input().split()]
i = 0
max = A[0]

for number in range(1, len(A)):
    if A[number] > max:
        max = A[number]
        i = number
print(max, i)

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Умова: Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.
"""
A = [int(number) for number in input().split()]
height = int(input())
i = 1

for number in range(0, len(A)):
    if A[number] < height:
        i = number + 1
        break
else:
    i = len(A) + 1
print(i)

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Умова: Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.
"""
A = [int(number) for number in input().split()]
A_2 = []

for number in A:
    for i in A_2:
        if number == i:
            break
    else:
        A_2.append(number)
print(len(A_2))

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Умова: Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.). Если элементов нечетное число, то последний элемент остается на своем месте.
"""
Ar = [int(m) for m in input().split()]

for m in range(0, len(Ar) - 1, 2):
    Ar[m], Ar[m + 1] = Ar[m + 1], Ar[m]

for m in Ar:
    print(m, end=' ')


#-----------------------------------------------------------------


#task10-----------------------------------------------------------
"""
Умова: В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.
"""

Ar = [int(num) for num in input().split()]
max = 0
min = 0

for num in range(len(Ar)):
    if Ar[num] > Ar[max]:
        max = num
    if Ar[num] < Ar[min]:
        min = num
Ar[min], Ar[max] = Ar[max], Ar[min]

for num in Ar:
    print(num, end = ' ')

#-----------------------------------------------------------------


#task11-----------------------------------------------------------
"""
Умова: Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие правее элемента с индексом k.
Программа получает на вход список, затем число k. Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров.
Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.
"""
Ar = [int(num) for num in input().split()]
k = int(input())
Ar.pop(k)
for elem in Ar:
    print(elem, end=' ')

#-----------------------------------------------------------------


#task12-----------------------------------------------------------
"""
Умова: Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C, сдвинув все элементы, имевшие индекс не менее k, вправо.
Посколько при этом количество элементов в списке увеличивается, после считывания списка в его конец нужно будет добавить новый элемент, используя метод append.
Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка.
+"""
Ar = [int(num) for num in input().split()]
k, c = [int(num) for num in input().split()]
temp = c

for num_2 in range(k, len(Ar)):
    Ar[num_2], temp = temp, Ar[num_2]
Ar.append(temp)

for num in Ar:
    print(num, end = ' ')

#-----------------------------------------------------------------


#task13-----------------------------------------------------------
"""
Умова: Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
"""
Ar = [int(num) for num in input().split()]
i = 0

for num in range(len(Ar)):
    for num_2 in range(num + 1, len(Ar)):
        if Ar[num] == Ar[num_2]:
            i += 1
print(i)

#-----------------------------------------------------------------


#task14-----------------------------------------------------------
"""
Умова: Дан список. Выведите те его элементы, которые встречаются в списке только один раз. Элементы нужно выводить в том порядке, в котором они встречаются в списке.
"""
A = [int(num) for num in input().split()]

for num in range(len(array)):
    for num_2 in range(len(A)):
        if A[num] == A[num_2] and num != num_2:
            break
    else:
        print(A[num])

#-----------------------------------------------------------------


#task16-----------------------------------------------------------
"""
Умова: Известно, что на доске 8?8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 — координаты 8 ферзей. Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
"""

Q = [[int(num) for num in input().split()] for num_2 in range(8)]
beat = False

for num in range(len(Q)):
    x1 = Q[num][0]
    y1 = Q[num][1]
    for num_2 in range(len(Q)):
        if num == num_2:
            continue
        x2 = Q[num_2][0]
        y2 = Q[num_2][1]
        if x1 == x2 or y1 == y2 or abs(x1-x2) == abs(y1-y2):
            beat = True
            break
if beat:
    print('YES')
else:
    print('NO')

#-----------------------------------------------------------------