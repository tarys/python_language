# task1-------------------------------------------------------------------------
"""

Умова: Напишіть програму, яка отримує три числа і друкує їх суму. Кожне число 
користувач вводить у окремому рядку.

Вхідні дані: 3 дійсних числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести суму трьох чисел на екран.
"""
# Програма для знахождення суми 3 чисел
# number1,number2,number3 - цілі чсла
number1 = int(input())
number2 = int(input())
number3 = int(input())
# вивід суми
print(number1 + number2 + number3)

# ------------------------------------------------------------------------------


# task2-------------------------------------------------------------------------
"""

Умова: Напишіть програму, яка отримує довжини двох катетів прямокутного 
трикутника та виводить його площу. Користувач вводить довжини катетів у окремих 
рядках.

Вхідні дані: 2 дійсних числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести площу трикутника на екран.
"""
# Програма для знаходження площі прямокутного трикутника
# Ввід катетів трикутника
a = int(input())
b = int(input())
# Вивід площи трикутника
print(a * b / 2)

# ------------------------------------------------------------------------------


# task3-------------------------------------------------------------------------
"""

Умова: N студентів отримали K яблук і розподілити їх між собою порівну. 
Неподілені яблука залишились у кошику. Скільки яблук отримає кожен студент? 
Скільки яблук залишиться в кошику?

Програма отримує числа N і K. Вона повинна вивести два числа: відповіді на 
поставлені вище питання.

Вхідні дані: 2 цілих числа.  Кожне число користувач вводить в окремому рядку.

Вихідні дані: вивести два числа. Перше - кількість яблук у студента, друге - 
кількість яблук, що лишилось у кошику.
"""
# Програма для підрахунка кількості яблук для кожного і остачі
# кількість студентів
student = int(input())
# кількість яблук
apples = int(input())
# кількість кожному
print(apples // student)
# кількість залишку
print(apples % student)

# ------------------------------------------------------------------------------


# task4-------------------------------------------------------------------------
"""

Умова: Нехай число N - кількість хвилин, відрахованих після півночі. Скільки 
годин і хвилин буде показувати цифровий годинник, якщо за відлік взяти 00:00?

Програма повинна виводити два числа: кількість годин (від 0 до 23) і кількість 
хвилин (від 0 до 59). Візьміть до уваги, що починаючи з півночі може пройти 
декілька днів, тому число N може бути достатньо великим.

Вхідні дані: 1 ціле число, що вводить користувач

Вихідні дані: вивести два числа. Перше - години, друге - хвилини.
"""
# програма для підрахунку для годиника
# від кількості хвилин
a = int(input())
# скількі хвилин в цьому дня
a = int(a % 1440)
# скільки годин
print(a // 60)
# скільки хвилин
print(a % 60)

# ------------------------------------------------------------------------------


# task5-------------------------------------------------------------------------
"""

Умова: Напишіть програму, яка вітає користувача, друкуючи слово "Hello", ім'я 
користувача і знак оклику після нього. Наприклад “Hello, Mike!”

Вхідні дані: ім'я користувача

Вихідні дані: вивести рядок привітання
"""
name = input()
print("Hello, ", name, "!", sep="")

# ------------------------------------------------------------------------------


# task6-------------------------------------------------------------------------
"""

Умова: Напишіть програму, яка зчитує ціле число і друкує його попереднє і 
наступне значення за форматом:
 	
The next number for the number 179 is 180.
The previous number for the number 179 is 178.

Вхідні дані: ціле число

Вихідні дані: два рядки за наведеним у завдання форматом.
"""
number = int(input())
print("The next number for the number ", number, " is ", number + 1, ".", sep="")
print("The previous number for the number ", number, " is ", number - 1, ".", sep="")

# ------------------------------------------------------------------------------


# task7-------------------------------------------------------------------------
"""

Умова: Школа вирішила сформувати три нові групи учнів та надати їм окремі 
класи. У кожному класі необхідно встановити столи для учнів, у розрахунку, що 
за одним столом може сидіти не більше двох учнів. Яку мінімальну кількість 
столів необхідно придбати?

Вхідні дані: 3 цілих числа - кількість учнів у кожній групі.  Кожне число 
користувач вводить в окремому рядку.

Вихідні дані: число - кількість столів
"""
# Програма для знаходження кількості парт в класі
# кількість учнів у кожному класі
class1 = int(input())
class2 = int(input())
class3 = int(input())
# Знаходженя кількості парт
print(class1 % 2 + class2 % 2 + class3 % 2 + class1 // 2 + class2 // 2 + class3 // 2)

# ------------------------------------------------------------------------------


# task8-------------------------------------------------------------------------
"""

Шнурки

Обувная фабрика собирается начать выпуск элитной модели ботинок. Дырочки для 
шнуровки будут расположены в два ряда, расстояние между рядами равно aa, а 
расстояние между дырочками в ряду bb. Количество дырочек в каждом ряду равно 
NN. Шнуровка должна происходить элитным способом “наверх, по горизонтали в 
другой ряд, наверх, по горизонтали и т.д.” (см. рисунок). Кроме того, чтобы 
шнурки можно было завязать элитным бантиком, длина свободного конца шнурка 
должна быть ll. Какова должна быть длина шнурка для этих ботинок?

Программа получает на вход четыре натуральных числа aa, bb, ll и NN - именно в 
таком порядке - и должна вывести одно число - искомую длину шнурка.
"""
# програма для знаходженя довжини шнурка
# відстань між рядками
a = int(input())
# відстань між дирками в рядку
b = int(input())
# дожина вільного кінця
l = int(input())
# кількість дирок
N = int(input())
# підрахунок
print((a * (N - 1) + b * (N - 1) + l) * 2 + a)

# ------------------------------------------------------------------------------
