# task1-------------------------------------------------------------------------
"""

Список квадратов
По данному целому числу N распечатайте все квадраты натуральных чисел, не 
превосходящие N, в порядке возрастания.
"""
# програма для вивода всіх квадратів числа, що не перевищують N
# number лічильник чисел
number = 1
# Задане число для порівняння
N = int(input())
# Цикл для виводу поки число не перевищує N
while number ** 2 <= N:
    print(number ** 2)
    number += 1

# ------------------------------------------------------------------------------


# task2-------------------------------------------------------------------------
"""

Минимальный делитель
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, 
отличный от 1.
"""
# Програма для виводу нвйменшого дільника
# Число лоя якого потрібо знайти найменшийдільник
n = int(input())
# ліильник дільнків
a = 2
# детектор
l = 0
# цикл для знаходження
while l == 0:
    if n % a == 0:
        l = 1
    a += 1
# вивід
print(a - 1)

# ------------------------------------------------------------------------------


# task3-------------------------------------------------------------------------
"""

Степень двойки
По данному натуральному числу N найдите наибольшую целую степень двойки, 
не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""
# прогрма для знаходження найбіьшого 2 в степені, що не первищує задане
# задане число
n = int(input())
# лічільник степення
a = 1
# виконувати поки 2 в степені не перевіщить задане число
while 2 ** a <= n:
    a += 1;
# вивід
print(a - 1, 2 ** (a - 1))

# ------------------------------------------------------------------------------


# task4-------------------------------------------------------------------------
"""

Утренняя пробежка
В первый день спортсмен пробежал x километров, а затем он каждый день 
увеличивал пробег на 10% от предыдущего значения. По данному числу y 
определите номер дня, на который пробег спортсмена составит не менее y 
километров.

Программа получает на вход действительные числа x и y и должна вывести одно 
натуральное число.
"""
# програма для знаходження дня в який довжина дистанції бігу перевищить задану
# ввід початкової та кінцевої кількості км
start_day_km = int(input())
finish_day_km = int(input())
# лічильник днів
i = 0
# цикл поки біг не перевищує кінцевий
while start_day_km < finish_day_km:
    start_day_km *= 1.1
    i += 1
# вивід
print(i + 1)

# ------------------------------------------------------------------------------


# task5-------------------------------------------------------------------------
"""

Банковские проценты
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, 
после чегодробная часть копеек отбрасывается. Определите, через сколько лет 
вклад составит не менее yрублей.
Выражение «дробная часть копеек отбрасывается» означает, что если у вас 
оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, то после округления 
у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.
"""
# прогрма для знаходження кількості років за які зміниться сума гошей, при збільшені в певний відсоток
# початкова сума грошей
initial_amount = int(input())
# процент збільшення
factor = int(input())
# кінцева (необхідна) сума грошей
final_amount = int(input())
# сума грошей на даний момент
money = initial_amount
# лічильник років
year = 0
# обчислення
while money < final_amount:
    money *= ((factor + 100) / 100)
    # округленя до 2 знаків пусля коми
    money = (money * 100) // 1 / 100
    year += 1
# вивід на єкран відповіді
print(year)

# ------------------------------------------------------------------------------


# task6-------------------------------------------------------------------------
"""
Длина последовательности
Программа получает на вход последовательность целых неотрицательных чисел, 
каждое число записано в отдельной строке. Последовательность завершается 
числом 0, при считывании которого программа должна закончить свою работу и 
вывести количество членов последовательности (не считая завершающего числа 0). 
Числа, следующие за числом 0, считывать не нужно.
"""
# програма для знаходження кількості чисел в ряді до 0
# лічильник
n = 0
# збільшувати n поки введене число не стане 0
while int(input()) != 0:
    n += 1
# вивести на екран кількість
print(n)

# ------------------------------------------------------------------------------


# task7-------------------------------------------------------------------------
"""

Сумма последовательности
Определите сумму всех элементов последовательности, завершающейся числом 0. В 
этой и во всех следующих задачах числа, следующие за первым нулем, учитывать 
не нужно.
"""
# програма для знаходження суми ряду до 0
# призначеня зміній number першого значення ряду
number = int(input())
# присвоєння початкової суми 0
sum = 0
# виконання до числа зі значеням 0
while number != 0:
    # підрахунок суми
    sum += number
    # призначення зміній наступного числа із ряду
    number = int(input())
# вивід суми
print(sum)

# ------------------------------------------------------------------------------


# task8-------------------------------------------------------------------------
"""

Среднее значение последовательности
Определите среднее значение всех элементов последовательности, завершающейся 
числом 0.
"""
# Прогама для знаходження середнього значеня елементів ряду, який закінчується 0
# присвєня першого числа ряду
number = int(input())
# початкова сума
sum = 0
# початковий номер
n = 1
# виконувати поки значення числа не стане 0
while number != 0:
    # знаходження нової суми
    sum += number
    # знаходження середнього значення
    normal = sum / n
    # присвоєння наступного значеня числа
    number = int(input())
    # зображення переходу на наступній номер
    n += 1
# вивід середнього значення
print(normal)

# ------------------------------------------------------------------------------


# task9-------------------------------------------------------------------------
"""

Максимум последовательности
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите значение наибольшего элемента последовательности.
"""
# програма для хнаходження найбільшого значення числа ряду, що закінчується 0
# присвоєння першого числа ряду
number = int(input())
# початкове максимальне число 0
maximum = 0
# виконувати поки число не стане 0
while number != 0:
    # знаходження максимального
    if number > maximum:
        maximum = number
    # присвоєння наступного числа
    number = int(input())
# вивід
print(maximum)

# -----------------------------------------------------------------------------


# task10-----------------------------------------------------------------------
"""

Индекс максимума последовательности
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите индекс наибольшего элемента последовательности. Если наибольших 
элементов несколько, выведите индекс первого из них. Нумерация элементов 
начинается с нуля.
"""
# програма знахождення індикса максимального числа
# присвоєння першого значення ряда
number = int(input())
# першій індикс 0
n = 0
# ідекс максимального числа 0
n_max = 0
# максимальне число 0
maximum = 0
# цикл поки число не стане 0
while number != 0:
    # перевірка на максимальність
    if number > maximum:
        # присвоєня нового максимального числа з новим індиксов
        n_max = n
        maximum = number
    # присвоєння наступного числа ряда
    number = int(input())
    n += 1
# вивід
print(n_max)

# -----------------------------------------------------------------------------


# task11-----------------------------------------------------------------------
"""

Количество четных элементов последовательности
Определите количество четных элементов в последовательности, завершающейся 
числом 0.
"""
# програма для знаходження кількості парних
# присвоєння першого значення ряду
number = int(input())
# кількість парних
n = 0
# цикл поки число ряду не стане 0
while number != 0:
    # перевірка на паність
    if number % 2 == 0:
        # збільшення кількості парних на 1
        n += 1
    # присвоєння наступного числа ряду
    number = int(input())
# вивід
print(n)

# -----------------------------------------------------------------------------


# task12-----------------------------------------------------------------------
"""
Количество элементов, которые больше предыдущего
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности больше предыдущего 
элемента.
"""
# програма для знаходження кількості чисел, які перевищують попереднє в ряду з закінченням 0
# присвоєння першого числа в ряду
last_number = int(input())
# присвоєння другого числа в ряду
number = int(input())
# кількисть чисел, що більше попереднього
n = 0
# цикл поки число не стане 0
while number != 0:
    # перевірка чи більше число попереднього
    if number > last_number:
        # збільшення кількості на 1
        n += 1
    # теперішнє число стає попереднім
    last_number = number
    # присвоєння новог числа із ряду
    number = int(input())
# вивід
print(n)

# -----------------------------------------------------------------------------


# task13-----------------------------------------------------------------------
"""

Второй максимум
Последовательность состоит из различных натуральных чисел и завершается 
числом 0. Определите значение второго по величине элемента в этой 
последовательности. Гарантируется, что в последовательности есть хотя бы 
два элемента.
"""
# програма для знаходження 2 по величині числа
# присвояння перших двух значення ряду
number_last = int(input())
number = int(input())
# випадок коли 1 число більше 2 (росподіл максимумів)
if number_last >= number:
    max_number = number_last
    max2_number = number
# інший випадок (розподіл максимумів
else:
    max_number = number
    max2_number = number_last
# цикл поки число не стан 0
while number != 0:
    # якщо число більше максимального (розподіл максимумів)
    if number > max_number:
        max2_number = max_number
        max_number = number
    # якщо число не є максимумом і більше 2 максимума, то воно 2 максимум
    elif (number > max2_number) and (number != max_number):
        max2_number = number
    number = int(input())
# вивід
print(max2_number)

# -----------------------------------------------------------------------------


# task14-----------------------------------------------------------------------
"""

Количество элементов, равных максимуму
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности равны ее наибольшему 
элементу.
"""
# прогрма для знаходження кількості максимальних чисел
# присвоєння значення першого числа в ряду
number = int(input())
# лічильник максимальних чисел
n = 0
# максимальне чисо
max_number = 0
# цикл поки значення числа не стане 0
while number != 0:
    # перевірка чи є число новим максмумом (в разі так анулювання лічильника)
    if number > max_number:
        max_number = number
        n = 1
    # перевірна на рівність числа с максимумом
    elif number == max_number:
        n += 1
    # присвоєння наступного значення
    number = int(input())
# вивід
print(n)

# -----------------------------------------------------------------------------


# task15-----------------------------------------------------------------------
"""

Числа Фибоначчи
По данному числу n определите n-е число Фибоначчи
"""
# програма для знаходження чисел фібоначі за індиксом
# присвоєння індикса
number = int(input())
# нульовий член посліжовності
fi_last = 1
# перший член послідовності
fi_last2 = 0
# число фібоначі
fi = 1
# індекс
n = 1
# цикл поки індикс не перевищить заданий
while n < number:
    # підрахунок нового числа фібоначчі
    fi = fi_last + fi_last2
    fi_last2 = fi_last
    fi_last = fi
    n += 1
# випадок коли індикс 0
if number == 0:
    fi = 0
# вивід
print(fi)

# -----------------------------------------------------------------------------


# task16-----------------------------------------------------------------------
"""

Номер числа Фибоначчи
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно 
является, то есть выведите такое число n, что φn = A. Если А не является 
числом Фибоначчи, выведите число -1.
"""
# програма для знаходження чисел фібоначі за індиксом
# присвоєння числа
number = int(input())
# нульовий член посліжовності
fi_last = 1
# перший член послідовності
fi_last2 = 0
# число фібоначі
fi = 1
# індекс
n = 1
# цикл поки число фібоначчі менше заданого
while fi < number:
    # підрахунок нового числа фібоначчі
    fi = fi_last + fi_last2
    fi_last2 = fi_last
    fi_last = fi
    n += 1
# випадок коли індикс 0
if number == 0:
    fi = 0
# вивід
if number != fi:
    print(-1)
else:
    print(n)

# -----------------------------------------------------------------------------


# task17-----------------------------------------------------------------------
"""

Максимальное число идущих подряд равных элементов
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите,
какое наибольшее число подряд идущих элементов этой последовательности равны 
друг другу.
"""
# Програма для знаходження найбільшої кількості повторів підряд в числовому ряді
# присвоєння чисел
number_last = int(input())
number = int(input())
# лічильник повторів
n = 1
# максимальна кількість повторів
nmax = 0
# циул поки число не стане 0
while number != 0:
    # перевірка на рівність чисел
    if number_last == number:
        n += 1
    # інший випадок
    else:
        # перевірка значення лічильника перед скиданням
        if nmax < n:
            nmax = n
        # скидання лічильника
        n = 1
    # присвоєня нових значень чисел
    number_last = number
    number = int(input())
# Перевірка останьго значення лічильника
if nmax < n:
    nmax = n
# вивід
print(nmax)

# ------------------------------------------------------------------------------


# task18------------------------------------------------------------------------
"""
Стандартное отклонение
Определите стандартное отклонение для данной последовательности натуральных
чисел, завершающейся числом 0.
"""
# програма для знаходження стандартного відхилення
# присвоєння першого числа
number = int(input())
# лічильник кількості
n = 0
# сума х
sum = 0
# сума квадратів х
sum_squar = 0
# цикл поки число не 0
while number != 0:
    # проміжні арифметичні дії
    sum += number
    sum_squar += (number ** 2)
    n += 1
    # присвоєння наступного числа
    number = int(input())
sum *= sum
# вивід
print(((sum_squar - sum / n) / (n - 1)) ** 0.5)

# -----------------------------------------------------------------------------
