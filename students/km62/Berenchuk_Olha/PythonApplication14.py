#task1------------------------------------------------------------
"""
В единственной строке записан текст. Для каждого слова из данного 
текста подсчитайте, сколько раз оно встречалось в этом тексте ранее.

Словом считается последовательность непробельных символов идущих 
подряд, слова разделены одним или большим числом пробелов или 
символами конца строки.

"""



A = {}
for w in input().split():
    A[w] = A.get(w, 0) + 1
    print(A[w] - 1, end=' ')

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Вам дан словарь, состоящий из пар слов. Каждое слово является 
синонимом к парному ему слову. Все слова в словаре различны.

Для слова из словаря, записанного в последней строке, определите 
его синоним.

"""



n = int(input())
p = {}
p = dict(input().split() for j in range(n))
k = input()
for key, value in p.items():
    if k == value:
        print(key)
    if k == key:
        print(value)

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
Как известно, в США президент выбирается не прямым голосованием, 
а путем двухуровневого голосования. Сначала проводятся выборы в 
каждом штате и определяется победитель выборов в данном штате. 
Затем проводятся государственные выборы: на этих выборах каждый 
штат имеет определенное число голосов — число выборщиков от этого 
штата. На практике, все выборщики от штата голосуют в соответствии 
с результами голосования внутри штата, то есть на заключительной 
стадии выборов в голосовании участвуют штаты, имеющие различное 
число голосов.

В первой строке дано количество записей. Далее, каждая запись 
содержит фамилию кандидата и число голосов, отданных за него в 
одном из штатов. Подведите итоги выборов: для каждого из участника 
голосования определите число отданных за него голосов. Участников 
нужно выводить в алфавитном порядке.

"""



number = int(input())
Faml = {}

def func(key, val):
    if key in Faml:
        Faml[key] += int(val)
    else:
        Faml[key] = int(val)
        
for j in range(number):        
    key, val = input().split()    
    func(key, val)
k = Faml.keys()
k = list(k) 
k.sort() 
for i in k:
    print(i, Faml[i])

#-----------------------------------------------------------------
#task4------------------------------------------------------------
"""
Текст Дан: в первой строке задано число строк, далее идут сами 
строки. Выведите слово, которое в этом тексте встречается чаще всего. 
Если таких слов несколько, выведите то, которое меньше в 
лексикографическом порядке.

"""



words = {}
for i in range(int(input())):
    for word in input().split():
        words[word] = words.get(word, 0) + 1

for i in sorted(words.items(), key=lambda x: (x[0])):    
    if i[1] == max(words.values()):
        print(i[0])
        break


#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
В файловую систему одного суперкомпьютера проник вирус, который 
сломал контроль за правами доступа к файлам. Для каждого файла 
известно, с какими действиями можно к нему обращаться:

запись W,
чтение R,
запуск X.
В первой строке содержится число N — количество файлов содержащихся 
в данной файловой системе. В следующих N строчках содержатся имена 
файлов и допустимых с ними операций, разделенные пробелами. Далее 
указано чиcло M — количество запросов к файлам. В последних M строках 
указан запрос вида Операция Файл. К одному и тому же файлу может быть 
применено любое колличество запросов.

Вам требуется восстановить контроль над правами доступа к файлам 
(ваша программа для каждого запроса должна будет возвращать OK если 
над файлом выполняется допустимая операция, или же Access denied, е
сли операция недопустима.

"""



A, B = {}, {}
ri = str()
y = 0
for i in range(int(input())):
    l = input().split()
    A[l[0]] = i
    for j in range(1, len(l)):
        ri = ri + ' ' + l[j]
    A[l[0]] = ri
    ri = ''
for i in range(int(input())):
    rig, file = input().split()
    B[file] = rig
    if rig == 'read':
        rig = 'R'
    elif rig == 'write':
        rig = 'W'
    else:
        rig = 'X'
    y = A.get(file)
    if y.find(rig) != -1:
        print('OK')
    else:
        print('Access denied')

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Текст Дан: в первой строке записано количество строк в тексте, а 
затем сами строки. Выведите все слова, встречающиеся в тексте, по 
одному на каждую строку. Слова должны быть отсортированы по убыванию 
количества их появления в тексте, а при одинаковой частоте появления 
— в лексикографическом порядке.

Указание. После того, как вы создадите словарь всех слов, вам 
захочется отсортировать его по частоте встречаемости слова. Желаемого 
можно добиться, если создать список, элементами которого будут кортежи 
из двух элементов: частота встречаемости слова и само слово. Например, 
[(2, 'hi'), (1, 'what'), (3, 'is')]. Тогда стандартная сортировка будет 
сортировать список кортежей, при этом кортежи сравниваются по первому 
элементу, а если они равны — то по второму. Это почти то, что 
требуется в задаче.

"""



words = {}
for i in range(int(input())):
    for word in input().split():
        words[word] = words.get(word, 0) + 1 
for i in sorted(words.items(), key=lambda x:(-x[1],x[0])): 
    print(i[0])


#-----------------------------------------------------------------
#task7------------------------------------------------------------
"""
Дан список стран и городов каждой страны. Затем даны названия 
городов. Для каждого города укажите, в какой стране он находится.

"""



land = {}
for i in range(int(input())):
    cntr, *cities = input().split()
    for city in cities:
        land[city] = cntr
        
for i in range(int(input())):
    print(land[input()])

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Однажды, разбирая старые книги на чердаке, школьник Вася нашёл 
англо-латинский словарь. Английский он к тому времени знал в 
совершенстве, и его мечтой было изучить латынь. Поэтому попавшийся 
словарь был как раз кстати.

К сожалению, для полноценного изучения языка недостаточно только 
одного словаря: кроме англо-латинского необходим латинско-английский. 
За неимением лучшего он решил сделать второй словарь из первого.

Как известно, словарь состоит из переводимых слов, к каждому из 
которых приводится несколько слов-переводов. Для каждого латинского 
слова, встречающегося где-либо в словаре, Вася предлагает найти все 
его переводы (то есть все английские слова, для которых наше латинское 
встречалось в его списке переводов), и считать их и только их 
переводами этого латинского слова.

Помогите Васе выполнить работу по созданию латинско-английского 
словаря из англо-латинского.

В первой строке содержится единственное целое число N — количество 
английских слов в словаре. Далее следует N описаний. Каждое описание 
содержится в отдельной строке, в которой записано сначала английское 
слово, затем отделённый пробелами дефис, затем разделённые запятыми 
с пробелами переводы этого английского слова на латинский. Все слова 
состоят только из маленьких латинских букв. Переводы отсортированы в 
лексикографическом порядке. Порядок следования английских слов в 
словаре также лексикографический.

Выведите соответствующий данному латинско-английский словарь, в 
точности соблюдая формат входных данных. В частности, первым должен 
идти перевод лексикографически минимального латинского слова, далее — 
второго в этом порядке и т.д. Внутри перевода английские слова должны 
быть также отсортированы лексикографически.

"""



England = {}
Latin = {}
for i in range(int(input())):
    en, *la = input().replace(',', '').split()
    England[en] = la
    for lat in la:
        if lat in la:
            Latin[lat] = Latin.get(lat, []) + [en] #создаем значения латинско-английского словаря
            Latin.pop("-", None)
print(len(Latin))
for lat in sorted(Latin.keys()):
    print(lat, end=" - ")
    print(*Latin[lat], sep=", ")

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Дана база данных о продажах некоторого интернет-магазина. Каждая 
строка входного файла представляет собой запись вида Покупатель 
товар количество, где Покупатель — имя покупателя (строка без пробелов), 
товар — название товара (строка без пробелов), количество — количество 
приобретенных единиц товара.

Создайте список всех покупателей, а для каждого покупателя 
подсчитайте количество приобретенных им единиц каждого вида товаров. 
Список покупателей, а также список товаров для каждого покупателя 
нужно выводить в лексикографическом порядке.

"""



d = {}
while True:
    try:
        l = input()
        key, *value = l.split()
        if key in d:
            d[key].append(value)
        else:
            d[key] = [value]
    except EOFError:
        l == ""
        break
for key, value in sorted(d.items()):
    print(key +":")
    a = int(value[0][1])
    value1 = {}
    s = {}
    for val in value:
        value1[val[0]] = val[1]
        if val[0] in s.keys():
            s[val[0]] = val[1]
            a = int(a) + int(val[1])
            s[val[0]] = a
            value1.update(s)
        else:
            s[val[0]] = val[1]
            value1[val[0]] = val[1]
    for key in sorted(value1.keys()):
        print(key, end=" ")
        print(value1[key])


#-----------------------------------------------------------------
