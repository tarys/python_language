#task1------------------------------------------------------------
"""
Выведите все элементы списка с четными индексами (то есть A[0], 
A[2], A[4], ...).

"""



number=input("Enter symbols:").split()
i=0
for i in range(len(number)):
    if (i % 2==0):
        print(number[i], end=' ')

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Выведите все четные элементы списка. При этом используйте цикл 
for, перебирающий элементы списка, а не их индексы!

"""



number=input("Enter numbers:").split()
for i in range(len(number)):
    number[i]=int(number[i])
    if (number[i]%2==0):
        print(number[i], end=' ')

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
Дан список чисел. Выведите все элементы списка, которые больше 
предыдущего элемента.

"""



number=input("Enter numbers:").split()
for i in range(len(number)):
    number[i]=int(number[i])
    if number[i]>int(number[i-1]) and i != 0:
        print(number[i], end = ' ')

#-----------------------------------------------------------------

#task4------------------------------------------------------------
"""
Дан список чисел. Если в нем есть два соседних элемента одного 
знака, выведите эти числа. Если соседних элементов одного знака 
нет — не выводите ничего. Если таких пар соседей несколько — 
выведите первую пару.

"""



number=[int(i) for i in input("Enter numbers:").split()]
for i in range(1, len(number)):
    if number[i] > 0 and number[i-1] > 0:
        print(number[i-1], number[i])
        break
    elif number[i] < 0 and number[i-1] < 0:
        print(number[i-1], number[i])
        break

#-----------------------------------------------------------------

#task5------------------------------------------------------------
"""
Дан список чисел. Определите, сколько в этом списке элементов, 
которые больше двух своих соседей, и выведите количество таких 
элементов. Крайние элементы списка никогда не учитываются, 
поскольку у них недостаточно соседей.

"""



number = [int(i) for i in input("Enter numbers:").split()]
i = 1 
bignumber = 0 
 
while i < len(number)-1:
    if number[i-1] < number[i] and number[i] > number[i+1]:
        bignumber += 1
        i += 2
    else:
        i += 1
print(bignumber)

#-----------------------------------------------------------------

#task6------------------------------------------------------------
"""
Дан список чисел. Выведите значение наибольшего элемента в списке, 
а затем индекс этого элемента в списке. Если наибольших элементов 
несколько, выведите индекс первого из них.

"""



number=[ int(i) for i in input("Enter numbers:").split()]
print(max(number), number.index(max(number)))

#-----------------------------------------------------------------

#task7------------------------------------------------------------
"""
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось 
определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность 
натуральных чисел, означающих рост каждого человека в строю. 
После этого вводится число X – рост Пети. Все числа во входных 
данных натуральные и не превышают 200.

Выведите номер, под которым Петя должен встать в строй. Если в 
строю есть люди с одинаковым ростом, таким же, как у Пети, то он 
должен встать после них.

"""



list=[int(i) for i in input().split()]
Peter=int(input())
list.append(Peter)
list.sort()
list.revers()
for i in range (len(list)):
    if Peter < list[i]:
        i+=1
    elif Peter == list[i]:
        i+=1
    elif Peter > list[i]:
        print (list.index(list[i])+1)
    
#-----------------------------------------------------------------

#task8------------------------------------------------------------
"""
Дан список, упорядоченный по неубыванию элементов в нем. 
Определите, сколько в нем различных элементов.
"""



list=[int(i) for i in input("Enter numbers:").split()]
number = 1
for i in range(0, len(list)-1):
    if list[i] != list[i+1]:
        number+=1
    else:
        i+=1
print(number)

#-----------------------------------------------------------------

#task9------------------------------------------------------------
"""
Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и 
т. д.). Если элементов нечетное число, то последний элемент 
остается на своем месте.

"""



list = [int(i) for i in input("Enter numbers:").split()]
for i in range(1, len(list), 2):
    list[i - 1], list[i] = list[i], list[i - 1]
print(' '.join([str(i) for i in list]))

#-----------------------------------------------------------------

#task10-----------------------------------------------------------
"""
В списке все элементы различны. Поменяйте местами минимальный и 
максимальный элемент этого списка.

"""



list=input().split()
for i in range(len(list)):
    list[i]=int(list[i])
max_list=max(list)
min_list=min(list)
x=list.index(max_list)
n=list.index(min_list)
list[x]=min_list
list[n]=max_list
for i in list:
    print(i,end=" ")

#-----------------------------------------------------------------

#task11-----------------------------------------------------------
"""
Дан список из чисел и индекс элемента в списке k. Удалите из 
списка элемент с индексом k, сдвинув влево все элементы, стоящие 
правее элемента с индексом k.
Программа получает на вход список, затем число k. Программа сдвигает
все элементы, а после этого удаляет последний элемент списка при
помощи метода pop() без параметров.

Программа должна осуществлять сдвиг непосредственно в списке, а не
делать это при выводе элементов. Также нельзя использовать 
дополнительный список. Также не следует использовать метод pop(k)
с параметром.

"""



a = input("Enter numbers:").split()
k = int(input("Enter number:"))
result = a[:k] + a[k + 1:]
print(" ".join([str(k) for k in result]))

#-----------------------------------------------------------------

#task12-----------------------------------------------------------
"""
Дан список целых чисел, число k и значение C. Необходимо вставить 
в список на позицию с индексом k элемент, равный C, сдвинув все 
элементы, имевшие индекс не менее k, вправо.
Посколько при этом количество элементов в списке увеличивается, 
после считывания списка в его конец нужно будет добавить новый 
элемент, используя метод append.

Вставку необходимо осуществлять уже в считанном списке, не делая 
этого при выводе и не создавая дополнительного списка.

"""



list_of_numbers = [int(item) for item in input().split()]
new_element=0
list_of_numbers[index:index] = new_element
for item in list_of_numbers:
    print(item)

#-----------------------------------------------------------------

#task13-----------------------------------------------------------
"""
task description in ua
Ctrl+C Ctrl+V from amis.fpm.kpi.ua
"""



list = [int(i) for i in input("Enter numbers:").split()]
count = 0
for i in range(len(list)):
    for k in range(i + 1, len(list)):
        if list[i] == list[k]:
            count += 1
print(count)

#-----------------------------------------------------------------

#task14-----------------------------------------------------------
"""
Дан список. Выведите те его элементы, которые встречаются в списке 
только один раз. Элементы нужно выводить в том порядке, в котором 
они встречаются в списке.

"""



list = [int(i) for i in input("Enter numbers:").split()]
for i in range(len(list)):
    if list.count(list[i]) == 1:
        print(list[i], end = " ")

#-----------------------------------------------------------------

#task15-----------------------------------------------------------
"""
N кеглей выставили в один ряд, занумеровав их слева направо 
числами от 1 до N. Затем по этому ряду бросили K шаров, при этом 
i-й шар сбил все кегли с номерами от li до ri включительно. 
Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество 
бросков K. Далее идет K пар чисел li, ri, при этом 1≤ li≤ ri≤ N.

Программа должна вывести последовательность из N символов, где 
j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, 
если j-я кегля была сбита.

"""



ninepins, layers = input().split(), input()
for i in range (layers):
    whipped = [int(i) for i in input().split()]
    for i in range(len(ninepins)):
        if i == whipped[l]:
            print(".")
        else:
            print("I")

#-----------------------------------------------------------------