#task1------------------------------------------------------------
"""
Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
"""
def number_list():
    a = input().split()
    for i in range(len(a)):
        a[i] = int(a[i])
        if i%2==0:
            print(a[i])
number_list()
#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Выведите все четные элементы списка. При этом используйте цикл for, перебирающий элементы списка, а не их индексы! 
"""
def number_list():
    a = input().split()
    for i in range(len(a)):
        a[i] = int(a[i])
        if a[i]%2==0:
            print(a[i])
number_list()
#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
Дан список чисел. Выведите все элементы списка, которые больше предыдущего элемента. 
"""
def number_list():
    a = input().split()
    for i in range(len(a)):
        a[i] = int(a[i])
        k=i-1
        if i>=1 and a[i]>a[i-1]:
            print(a[i])
number_list()

#-----------------------------------------------------------------



#task4------------------------------------------------------------
"""
Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа. Если соседних элементов одного знака нет — не выводите ничего. Если таких пар соседей несколько — выведите первую пару.   
"""
def number_list():
    a = input().split()
    for i in range(len(a)):
        a[i] = int(a[i])
        if i>=1:
            if a[i] > 0 and a[i-1] > 0:
                print(a[i-1],a[i])
                break
            elif a[i] < 0 and a[i-1] < 0:
                print(a[i-1],a[i])
                break
number_list()
#-----------------------------------------------------------------

#task5------------------------------------------------------------
"""
Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей, и выведите количество таких элементов. Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.   
"""
a = [int(s) for s in input().split()]
k=0
for i in range(1,(len(a)-1)):
    if a[i-1] < a[i] and a[i] > a[i+1]:
        k+=1
print(k)
#-----------------------------------------------------------------

#task6------------------------------------------------------------
"""
Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке. Если наибольших элементов несколько, выведите индекс первого из них.    
"""



#
a = [int(s) for s in input().split()]
print(max(a), a.index(max(a)))
#-----------------------------------------------------------------

#task7------------------------------------------------------------
"""
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю. После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй. Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.    
"""
a = [int(s) for s in input().split()]
b = int(input())
i=0
k=1
while a[i] >= b:
    k+=1
    i+=1
    if i >= len(a):
        k=len(a)+1
        break
print(k)
#-----------------------------------------------------------------

#task8------------------------------------------------------------
"""
Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.    
"""
a = [int(i) for i in input().split()]
n = 1
for i in range(0, len(a) - 1):
    if a[i] != a[i + 1]:
        n += 1
print(n)
#-----------------------------------------------------------------

#task9------------------------------------------------------------
"""
Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.). Если элементов нечетное число, то последний элемент остается на своем месте.    
"""
a = [int(s) for s in input().split()]
b = []
i=1
if len(a)%2==0:
    for j in range(len(a)-1):
        if i >= len(a):
            break
        b.append(a[i])
        b.append(a[i-1])
        i+=2
elif len(a) == 1:
    print(a[0])
else:
    for j in range(len(a)-1):
        if i >= len(a):
            b.append(a[len(a)-1])
            break
        b.append(a[i])
        b.append(a[i-1])
        i+=2
print(' '.join([str(l) for l in b]))
#-----------------------------------------------------------------

#task10------------------------------------------------------------
"""
В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.   
"""
a = list(map(int, input().split()))
min, max = min(a), max(a)
i, j = a.index(min), a.index(max)
a[i], a[j] = max, min
print(' '.join(map(str, a)))
#-----------------------------------------------------------------

#task11------------------------------------------------------------
"""
Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие правее элемента с индексом k.
Программа получает на вход список, затем число k. Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров.
Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов. Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.   
"""
a = [int(s) for s in input().split()]
k = int (input())
del a[k]
print(' '.join([str(l) for l in a]))
#-----------------------------------------------------------------

#task12------------------------------------------------------------
"""
Дан список целых чисел, число k и значение C. Необходимо вставить в список на позицию с индексом k элемент, равный C, сдвинув все элементы, имевшие индекс не менее k, вправо.
Посколько при этом количество элементов в списке увеличивается, после считывания списка в его конец нужно будет добавить новый элемент, используя метод append.
Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка.    
"""
a = [int(s) for s in input().split()]
b = [int(i) for i in input().split()]
k = b[0]
a.insert(k, b[1])
print(' '.join([str(l) for l in a]))
#-----------------------------------------------------------------

#task13------------------------------------------------------------
"""
Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.   
"""
a = [int(s) for s in input().split()]
c = 0;
for i in a:
    for j in a:
        if i == j:
           c+=1
    c-=1
print (c // 2)
#-----------------------------------------------------------------

#task14------------------------------------------------------------
"""
Дан список. Выведите те его элементы, которые встречаются в списке только один раз. Элементы нужно выводить в том порядке, в котором они встречаются в списке.    
"""
a = [int(s) for s in input().split()]
for i in range(len(a)):
    if a.count(a[i])==1:
        print(a[i], end = ' ')
#-----------------------------------------------------------------

#task15------------------------------------------------------------
"""
N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. Затем по этому ряду бросили K шаров, при этом i-й шар сбил все кегли с номерами от li до ri включительно. Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество бросков K. Далее идет K пар чисел li, ri, при этом 1? li? ri? N.
Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, если j-я кегля была сбита.    
"""
n, k = input().split()
x = ['I' for a in range(int(n))]
for i in range(int(k)):
    l, r = [int(a) for a in input().split()]
    for j in range(l-1,r):
        x[j] = '.'
print(''.join(x))
#-----------------------------------------------------------------

#task16------------------------------------------------------------
"""
Известно, что на доске 8?8 можно расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 — координаты 8 ферзей. Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.    
"""
a = [[int(i) for i in input().split()] for j in range(8)]
flag = 0
for i in range(8):
    for j in range(i + 1, 8):
        if a[i][0] == a[j][0] or a[i][1] == a[j][1] or (
            abs(a[i][0] - a[j][0]) == abs(a[i][1] - a[j][1])):
                print("YES")
                flag = 1
                break
    if flag:
        break
else:
    print("NO")
#-----------------------------------------------------------------