#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел,
не превосходящие N, в порядке возрастания.
"""



n=int(input())
i=1
while (i**2)<=n:
    print(i**2, end=' ')
    i+=1

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2.
Выведите его наименьший натуральный делитель, отличный от 1.

"""



n=int(input())
i=1
while i<=n:
    i+=1
    if n%i==0:
        break
print(i)

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""



n=int(input())
i=1
p=0
while i*2<=n:
    i*=2
    p+=1
print(p,i)

#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""



x=float(input())
y=float(input())
i=1
while x<y:
    x+=(x*0.1)
    i+=1
print(i)

#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей.
Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается.
Определите, через сколько лет вклад составит не менее y рублей.
"""



x=float(input())
p=int(input())
y=int(input())
i=0

while x<y:
    x+=(x*(p/100))
    x=float(int(x*100))/100
    i+=1
print(i)

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке.
Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество
членов последовательности (не считая завершающего числа 0).
Числа, следующие за числом 0, считывать не нужно.
"""



i=0
x=1
while x!=0:
    x=int(input())
    if x!=0:
        i+=1
print(i)

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0.
В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""



x=1
suma=0
while x!=0:
    x=int(input())
    suma+=x
print(suma)

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""



x=1
suma=0
i=0
while x!=0:
    x=int(input())
    if x!=0:
        i+=1
        suma+=x
print(suma/i)

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите значение наибольшего элемента последовательности.
"""



maxx=0
x=int(input())
while x!=0:
    if x>maxx:
        maxx=x
    x=int(input())
print(maxx)

#-----------------------------------------------------------------


#task10-----------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите индекс наибольшего элемента последовательности.
Если наибольших элементов несколько, выведите индекс первого из них.
Нумерация элементов начинается с нуля.
"""



i=0
j=0
maxx=0
x=int(input())
while x!=0:
    if x>maxx:
        maxx=x
        i=j
    x=int(input())
    j+=1
print(i)

#-----------------------------------------------------------------


#task11-----------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""



i=0
x=int(input())
while x!=0:
    if x%2==0:
        i+=1
    x=int(input())
print(i)

#-----------------------------------------------------------------


#task12-----------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""



i=0
p=0
x=int(input())
while x!=0:
    if x>p:
        i+=1
    p=x
    x=int(input())
print(i-1)

#-----------------------------------------------------------------


#task13-----------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0.
Определите значение второго по величине элемента в этой последовательности.
Гарантируется, что в последовательности есть хотя бы два элемента.
"""



maxx=0
maxx2=0
x=int(input())
while x!=0:
    if x>maxx:
        maxx2=maxx
        maxx=x
    elif x>maxx2:
        maxx2=x
    x=int(input())
print(maxx2)

#-----------------------------------------------------------------


#task14-----------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""



maxx=0
i=0
x=int(input())
while x!=0:
    if x>maxx:
        maxx=x
        i=0
    if x==maxx:
        i+=1
    x=int(input())
print(i)

#-----------------------------------------------------------------


#task15-----------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""



#defaults
f0=0
f1=1
i=0
#input
f=int(input())
#main
if f>1:
    for i in range(f-1):
        f2=f0+f1;
        f0=f1
        f1=f2
    print(f2)
if f==1:
    print(f1)
if f==0:
    print(f0)

#-----------------------------------------------------------------


#task16-----------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φn = A.
Если А не является числом Фибоначчи, выведите число -1.
"""



f0=0
f1=1
f=1
i=1
a=int(input())
while f<a:
    f=f0+f1
    f0=f1
    f1=f
    i+=1
    if a==f:
        break
    if a<f:
        i=-1
        break
print(i)

#-----------------------------------------------------------------


#task17-----------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""



maxx=0
i=1
x0=0
x=int(input())
while x!=0:
    x0=x
    x=int(input())
    if x==x0:
        i+=1
    else:
        if i>maxx:
            maxx=i
        i=1
print(maxx)

#-----------------------------------------------------------------


#task18-----------------------------------------------------------
"""
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""



s=0
sqr=0
i=0
x=int(input())
while x!=0:
    s+=x
    sqr+=x**2
    i+=1
    x=int(input())
win=((sqr-((s**2)/i))/(i-1))**(1/2)
print(win)

#-----------------------------------------------------------------


