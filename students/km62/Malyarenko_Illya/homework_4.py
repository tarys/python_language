#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""

#default------------------------------
increased_number=0
result=""
#Input--------------------------------
number=int(input())
#main---------------------------------
while increased_number**2 <= number:
    increased_number+=1
    if increased_number**2>number:
        break
    result+= str(increased_number**2)+" " 
#output-------------------------------
print(result)

#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""

#default------------------------------
tested_number=2
#Input--------------------------------
number=int(input())
#main---------------------------------
while number%tested_number != 0:
    tested_number+=1
#output-------------------------------
print(tested_number)

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""

#default------------------------------
tested_number=2
counter=1
#Input--------------------------------
number=int(input())
#main---------------------------------
while tested_number <= number:
    tested_number*=2
    counter+=1
#output-------------------------------
print(counter-1,' ', tested_number/2)

#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""

#default------------------------------
counter=1
#Input--------------------------------
first_run=int(input())
last_run=int(input())
#main---------------------------------
while first_run < last_run:
    first_run*=1.1
    counter+=1
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
task description in ua
Ctrl+C Ctrl+V from amis.fpm.kpi.ua

"""

#default------------------------------
counter=0
#Input--------------------------------
x=int(input())
p=float(input())
y=int(input())
#main---------------------------------
while x < y:
    x=x+(x*p/100)
    counter+=1
#output-------------------------------
print(counter)



2й вариант
#default------------------------------
counter=0
#Input--------------------------------
x=int(input())
p=float(input())
y=int(input())
#main---------------------------------
x1=x
while x < y:
    x=x+(x1+p/100-x1)
    counter+=1
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""

#default------------------------------
counter=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x != 0:
    x=int(input())
    counter+=1
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""

#default------------------------------
sum=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x != 0:
    sum+=x
    x=int(input())
#output-------------------------------
print(sum)

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

#default------------------------------
sum=0
counter=1
avarage=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x != 0:
    sum+=x
    x=int(input())
    counter+=1
#output-------------------------------
avarage=sum/(counter-1)
print(avarage)

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение наибольшего элемента последовательности.
"""

#default------------------------------
biggest=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if biggest<x:
        biggest=x
    x=int(input())
#output-------------------------------
print(biggest)

#-----------------------------------------------------------------


#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите индекс наибольшего элемента последовательности. Если наибольших элементов несколько, выведите индекс первого из них. Нумерация элементов начинается с нуля.
"""

#default------------------------------
biggest=0
counter=-1
counter_check=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    counter+=1
    if biggest<x:
        biggest=x
        counter_check=counter
    x=int(input())
#output-------------------------------
print(counter_check)

#-----------------------------------------------------------------


#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""

#default------------------------------
counter=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if x%2==0:
        counter+=1
    x=int(input())
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""

#default------------------------------
previous_number=0
counter=-1
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if previous_number<x:
        counter+=1
    previous_number=x
    x=int(input())
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. Определите значение второго по величине элемента в этой последовательности. Гарантируется, что в последовательности есть хотя бы два элемента.
"""

#default------------------------------
first_max=0
second_max=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if x<first_max and x>second_max:
        second_max=x        
    if first_max<x:
        second_max=first_max
        first_max=x
    x=int(input())
#output-------------------------------
print(second_max)

#-----------------------------------------------------------------


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""

#default------------------------------
number_max=0
counter=1
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if number_max<x:
        counter=1
        number_max=x
    elif x==number_max:
        counter+=1
    x=int(input())
#output-------------------------------
print(counter)

#-----------------------------------------------------------------


#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""

#defaults
First_number_default=0
Second_number_default=1
sum_numbers=0
number=1
position=1
#input
number=int(input())
#main
while position<=number:
    sum_numbers=First_number_default+Second_number_default
    First_number_default=Second_number_default
    Second_number_default=sum_numbers
    position+=1
    if position==number:
        break
#result
print(sum_numbers)

#-----------------------------------------------------------------


#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""

#defaults
First_number_default=0
Second_number_default=1
sum_numbers=0
position=1
Checker=False
 
#input
Number=int(input())
 
#main
while sum_numbers<=Number:
    sum_numbers=First_number_default+Second_number_default
    First_number_default=Second_number_default
    Second_number_default=sum_numbers
    position+=1
    if sum_numbers==Number:
        Checker=True
        position-=1
 
#result
if Checker==True:
    print(position)
else:
    print('-1')

#-----------------------------------------------------------------


#task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""

#default------------------------------
number_save=0
checker=0
counter1=1
counter_save=1
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    if x==number_save:
        counter1+=1
    else:
        counter1=1
    if  counter1>counter_save:
        counter_save=counter1
    number_save=x
    x=int(input())    
#outpt-------------------------------
print(counter_save)

#-----------------------------------------------------------------


#task18------------------------------------------------------------
"""
Дана последовательность натуральных чисел x1x1, x2x2, ..., xnxn. Стандартным отклонением называется величина
σ=(x1−s)2+(x2−s)2+…+(xn−s)2n−1−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−√
σ=(x1−s)2+(x2−s)2+…+(xn−s)2n−1
где s=x1+x2+…+xnns=x1+x2+…+xnn — среднее арифметическое последовательности.

Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""

#default------------------------------
sum=0
number=0
sum_2=0
#Input--------------------------------
x=int(input())
#main---------------------------------
while x!=0:
    sum+=x
    sum_2+=x**2
    number+=1
    x=int(input())
result=((sum_2-((sum)**2/number))/(number-1))**(1/2)
#output-------------------------------
print(result)

#-----------------------------------------------------------------
