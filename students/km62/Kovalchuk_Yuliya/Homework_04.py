#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""


N = int(input())
i=1
while i**2 <= N:
    print (i**2)
    i += 1


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""


n = int(input()) 
i = 2
while n % i != 0:
    i += 1
print(i)


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. Выведите показатель степени и саму степень.
Операцией возведения в степень пользоваться нельзя!
"""
________________________________________


n = int(input())
power2= 2 
power = 1
while power2 <= n:
    power += 1
    power2*= 2
print(power - 1, power2 // 2)


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.
Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""


x = float(input())
y = float(input())
N = 1
while x < y:
    N += 1
    x *= 1.1
print(N)


#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чегодробная часть копеек отбрасывается. Определите, через сколько лет вклад составит не менее yрублей.
Выражение «дробная часть копеек отбрасывается» означает, что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.
Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""


x = int(input())
p = int(input())
y = int(input())
i = 0
while x < y:
    x *= 1+p/100
    x = int(100*x)/100
    i += 1
print(i)


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и вывести количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""


len = 0
a=int(input())
while a != 0:
    len += 1
    break
print(len)


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""


sum = 0
i = int(input())
while i != 0:
    sum += i
    i = int(input())
print(sum)


#task8------------------------------------------------------------
""”
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""


s = 0
len = 0
a = int(input())
while a != 0:
    s += a
    len += 1
    a = int(input())
print(s / len)


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите значение наибольшего элемента последовательности.
"""


max=0
while True:
    a = int( input ( ) )
    if a == 0:
       break
    if a > max:
       max  = a
print (max )


#task10------------------------------------------------------------
""”
Последовательность состоит из натуральных чисел и завершается числом 0. Определите индекс наибольшего элемента последовательности. Если наибольших элементов несколько, выведите индекс первого из них. Нумерация элементов начинается с нуля.
"""


max = 0
s = 0
index = 1
while True:
    a = int(input())
    if a == 0:
       break
    s += 1
    if max < a:
       max = a
       index = s-1
print(index)


#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""


x = 0
while True:
   a=int(input())
   if a == 0:
      break
   if a % 2 == 0:
      x += 1
print(x)


#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""


element = int(input())
answer = 0
while element != 0:
    a = int(input())
    if a != 0: 
         element < a
    answer += 1
    element = a
print(answer-1)


#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. Определите значение второго по величине элемента в этой последовательности. Гарантируется, что в последовательности есть хотя бы два элемента.
"""


max1 = int(input())
max2 = int(input())
if max1<max2:
    max1, max2 = max2, max1
element = int(input())
while element!= 0:
    if element>max1:
        max2, max1 = max1, element
    elif element>max2:
        max2 = element
    element=int(input())
print(max2)


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""


a = int(input())
k = 0
n = -1
while a != 0:
    if a > k:
        k, n = a, 1
    elif a == k:
        n +=1
        a = int(input())
print (n)


#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
По данному числу n определите n-е число Фибоначчи φn.
"""


n = int(input())
if n == 0:
    print(0)
else:
    a, b = 0, 1
    for i in range(2, n+1):
        a, b = b, a + b
    print(b)


#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""


a = int(input())
if a == 0:
    print(0)
else:
    fib_prev, fib_next = 0, 1
    n = 1
    while fib_next <= a:
        if fib_next == a:
            print(n)
            break
        fib_prev, fib_next = fib_next, fib_prev + fib_next
        n += 1
    else:
        print(-1)


#task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""


a = -1
b = 0
c = 0
element = int(input())
while element != 0:
    if a == element:
        b += 1
    else:
        a = element
        c = max(c, b)
        b = 1
    element = int(input())
c = max(c, b)
print(c)


#task18------------------------------------------------------------
"""
Дана последовательность натуральных чисел x1, x2, ..., xn. Стандартным отклонением называется величинаσ=√(x1−s)2+(x2−s)2+…+(xn−s)2n−1
где s=x1+x2+…+xnn — среднее арифметическое последовательности.
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""


from math import sqrt

a = 0
b = 0
x_i = int(input())
n = 0
while x_i != 0:
    n += 1
    a += x_i
    b += x_i ** 2
    x_i = int(input())
print(sqrt((b - a ** 2 / n) / (n - 1)))


