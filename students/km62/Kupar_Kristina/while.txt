#task1-------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных 
чисел, не превосходящие N, в порядке возрастания.
"""
i = 0
N = int(input("Enter N:"))
while i < N:
    print(i * i)
    i += 1
#-----------------------------------------------------------------

#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный
делитель, отличный от 1.
"""
i = 1
N = int(input("Enter N:"))
while i < N:
    if N % i == 0 and i != 1:
       print ("Found: ", i)
       break
    i += 1
#-----------------------------------------------------------------

#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень 
двойки, не превосходящую N. Выведите показатель степени и саму 
степень.
Операцией возведения в степень пользоваться нельзя!
"""
i, counter = 2, 0
N = int(input("Enter N: "))
while i < N:
    i *= 2
    counter += 1

# Cause we iterate once more, we need to return i / 2
print ("i: ", i/2)
print ("counter: ", counter)


#-----------------------------------------------------------------

#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый 
день увеличивал пробег на 10% от предыдущего значения. По данному 
числу y определите номер дня, на который пробег спортсмена
составит не менее y километров.
Программа получает на вход действительные числа x и y и должна
вывести одно натуральное число.
"""
x = int(input("Enter X: "))
y = int(input("Enter Y: "))
counter = 1
while x < y:
    x += x * 1.1
    counter += 1

print ("counter: ", counter)

#-----------------------------------------------------------------

#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p 
процентов, после чего дробная часть копеек отбрасывается. 
Определите, через сколько лет вклад составит не менее y рублей.
Выражение «дробная часть копеек отбрасывается» означает, что если
у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек,
то после округления у вас получится 123 рубля и 45 копеек, т.е. 
123.45 рублей.
Программа получает на вход три натуральных числа: x, p, y и должна
вывести одно целое число.
"""
x = int(input("Enter X: "))
p = int(input("Enter P: "))
y = int(input("Enter Y: "))
counter = 0
while x < y:
    x += (x * p/100) / 100
    counter += 1

print "counter: ", counter

#-----------------------------------------------------------------

#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательны-
-х чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого 
программа должна закончить свою работу и вывести количество членов 
последовательности (не считая завершающего числа 0). Числа, 
следующие за числом 0, считывать не нужно.
"""
i = 0
while int(input("Enter number")) != 0:
    i += 1`
print (i)

#-----------------------------------------------------------------

#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся
числом 0. В этой и во всех следующих задачах числа, следующие за
первым нулем, учитывать не нужно.
"""
sum = 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        sum += tmp
    else:
        readNumbers = False
print (sum)

#-----------------------------------------------------------------

#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, 
завершающейся числом 0.
"""
sum, i = 0, 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        sum += tmp
        i += 1
    else:
        readNumbers = False
print (sum / i)

#-----------------------------------------------------------------

#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите значение наибольшего элемента последовательности.
#-----------------------------------------------------------------
"""
max, i = 0, 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        if tmp > max:
            max = tmp
    else:
        readNumbers = False
print (max)


#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом
0. Определите индекс наибольшего элемента последовательности. Если 
наибольших элементов несколько, выведите индекс первого из них. 
Нумерация элементов начинается с нуля.
"""
max, i, max_counter = 0, 0, 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        if tmp > max:
            max = tmp
            max_counter = i
    else:
        readNumbers = False
    i += 1
print (max_counter)

#-----------------------------------------------------------------

#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завер-
-шающейся числом 0.
"""
ods, i = 0, 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        if tmp % 2 == 0:
            ods += 1
    else:
        readNumbers = False
print (ods)

#-----------------------------------------------------------------


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите, сколько элементов этой последовательности 
равны ее наибольшему элементу.
"""
max, i = 0, 0
readNumbers = True
while readNumbers:
    tmp = int(input("Enter number: "))
    if tmp != 0:
        if tmp > max:
            max = tmp
            i = 0

        if tmp == max:
            i += 1

    else:
        readNumbers = False
print (i)

#-----------------------------------------------------------------

#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
По данному числу n определите n-е число Фибоначчи φn.
Эту задачу можно решать и циклом for.
"""

a, b = 0, 1
N = int(input("Enter n: "))
i = 0
while i < N:
    a, b = a + b, a
    i += 1

print (a)

#-----------------------------------------------------------------

#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""
a, b = 0, 1
N = int(input("Enter Fibb number: "))
i = 0
found = False
while not found and a < N:
    a, b = a + b, a
    i += 1
    if a == N:
        found = True

if not found:
    i = -1

print (i)


#-----------------------------------------------------------------


