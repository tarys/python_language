#task1--------------------------------------------------
'''Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).'''

print('Вывод элементов списка с четными индексами')

#input
list = input().split()

#main
for i in range (len (list)):
    if i % 2 == 0:
        print ( list[i], end = ' ')
print()       

#------------------------------------------------------------------------

#task2-----------------------------------------------------------------
'''Выведите все четные элементы списка. При этом используйте
цикл for, перебирающий элементы списка, а не их индексы!'''

print('Вывод четных елементов списка')

list = input().split()

for element in list:
    if int(element) % 2 == 0:
        print (element, end = ' ')
print()

#----------------------------------------------------------------------------

#task3-----------------------------------------------------------------------
'''Дан список чисел.Выведите все элементы списка,
которые больше предыдущего элемента.'''

print('Вывод элементов списка, которые больше предедущего елемента')

list = [ int(i) for i in input(). split()]
for i in range (len(list)):
   if list[i] > list [i -1]:
       print (list [i], end = ' ')
print()
#---------------------------------------------------------------------------

#task4----------------------------------------------------------------------
'''Дан список чисел. Если в нем есть два соседних элемента одного знака,
выведите эти числа. Если соседних элементов одного знака нет — не выводите
ничего. Если таких пар соседей несколько — выведите первую пару.'''

print('Вывод сосодних елементов одного знака')

list = [int (i) for i in input().split()]

for i in range (1, len(list)):
    if list [i - 1] * list [i] > 0:
        print ( list [i-1], list [i])
        break
#--------------------------------------------------------------------------

#task5----------------------------------------------------------
'''Дан список чисел. Определите, сколько в этом списке элементов, которые больше
двух своих соседей, и выведите количество таких элементов.
Крайние элементы списка никогда не учитываются, поскольку у них недостаточно
соседей.'''

c = 0
list = [int (i) for i in input().split()]

for i in range ( 2, len(list)):
    if list [i - 2] < list [i - 1] > list [i]:
        c += 1
print (c)
#------------------------------------------------------------------------

#task6--------------------------------------------------------------
'''Дан список чисел. Выведите значение наибольшего элемента в списке,
а затем индекс этого элемента в списке.
Если наибольших элементов несколько, выведите индекс первого из них.'''

list = [int (i) for i in input().split()]

print (max (list))
for i in range (len(list)):
    if list [i] == max(list):
        print(i)
        break

#----------------------------------------------------------------------

#task7-----------------------------------------------------------------
'''Петя перешел в другую школу. На уроке физкультуры ему понадобилось
определить свое место  в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел,
означающих рост каждого человека в строю. После этого вводится число Х - рост
Пети. Все числа во входных данных натуральные и не превышают 200.

Выведите номер, под которым Петя должен стать в строй. Если в строю есть люди с
одинаковым ростом, таким же как и у Пети, то он должен встать после них.'''

#input
list = [int(i) for i in input().split()]
number = int(input())

#main
for i in range (0, len(list)):
    if list[i] < number:
        position = i + 1
        break
    else:
        position = len(list) + 1

#output
print (position)                #int
#----------------------------------------------------------------------------

#task8-----------------------------------------------------------------------
'''Дан список, упорядоченный по неубыванию элементов в нем.
Определите, сколько в нем различных элементов.'''

#input
list = [int(i) for i in input().split()]

#main
index = 1
for i in range(0, len(list) - 1):
    if list[i] != list[i + 1]:
        index += 1

#output
print(index)                #int
#------------------------------------------------------------------------------

#task9---------------------------------------------------------------------
'''Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.).
Если элементов нечетное число, то последний элемент остается на своем месте. '''

#input
list = [int(i) for i in input().split()]

#main
new_list = []
for i in range (0, len(list)-1, 2):
    list [i], list [i + 1] = list [i + 1], list [i]

#output
for i in list:    
    print (i, end = ' ' )
#-----------------------------------------------------------------------------

#task10----------------------------------------------------------------------
'''  В списке все элементы различны. Поменяйте местами минимальный и максимальный
элемент этого списка. '''

#input
list = [int(i) for i in input().split()]

#main
max = 0
min = 0

for i in range (len(list)):
    if list [i] > list[max]:
       max = i
    if list [i] < list [min]:
        min = i
list [max], list [min] = list[min], list [max]

#output
for i in list:
    print(i, end = ' ' )
#------------------------------------------------------------------------------

#task11----------------------------------------------------------------------
'''   Дан список из чисел и индекс элемента в списке k.
Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие
правее элемента с индексом k.
Программа получает на вход список, затем число k. Программа сдвигает все
элементы, а после этого удаляет последний элемент
списка при помощи метода pop() без параметров.

Программа должна осуществлять сдвиг непосредственно в списке,
а не делать это при выводе элементов. Также нельзя использовать дополнительный
список. Также не следует использовать метод pop(k) с параметром.'''

#input
list = [int(i) for i in input().split()]
k = int(input())

#main
for i in range(k, len(list) - 1):
    a[i], a[i + 1] = a[i + 1], a[i]
list.pop()

#output
for i in list:
    print(list)
#-----------------------------------------------------------------------------

#task12-------------------------------------------------------------------------
''' Дан список целых чисел, число k и значение C.
Необходимо вставить в список на позицию с индексом k элемент, равный C,
сдвинув все элементы, имевшие индекс не менее k, вправо.
Посколько при этом количество элементов в списке увеличивается,
после считывания списка в его конец нужно будет добавить новый элемент,
используя метод append.

Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка. ''''

#input
list = [int(i) for i in input().split()]
k, c = [int(i) for i in input().split()]

#main
element = c

for i in range ( k, len(list)):
    list[i], element = element, list[i]
list.append(element)

#output
for i in list:
    print (i, end = ' ')
#-----------------------------------------------------------------------

#task13------------------------------------------------------------------------
''' Дан список чисел. Посчитайте, сколько в нем пар элементов,
равных друг другу. Считается, что любые два элемента, равные друг другу
образуют одну пару, которую необходимо посчитать.  '''

#input
list = [int(si for i in input().split()]
counter = 0

#main
for i in range(len(list)):
    for j in range(i + 1, len(list)):
        if list[i] == list[j]:
            counter += 1


#output
print(counter)

#-------------------------------------------------------------------------------

#task14----------------------------------------------------------------------
''' Дан список. Выведите те его элементы, которые встречаются в списке
только один раз. Элементы нужно выводить в том порядке, в котором они
встречаются в списке. '''

#input
list = [int(i) for i in input().split()]

#main
for i in range (len(list)):
    for j in range (len(list)):
        if i != j and list[i] == list[j]:
            break
    else:
        
        #output
        print (list[i])
#----------------------------------------------------------------------------

#task15--------------------------------------------------------------------
''' N кеглей выставили в один ряд, занумеровав их слева направо
числами от 1 до N. Затем по этому ряду бросили K шаров, при этом i-й шар
сбил все кегли с номерами от li до ri включительно. Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество бросков K.
Далее идет K пар чисел li, ri, при этом 1≤ li≤ ri≤ N.

Программа должна вывести последовательность из N символов,
где j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, е
сли j-я кегля была сбита.  '''

n, k = [int(i) for i in input().split()]
throws = [[int(i) for i in input().split()] for j in range(k)]

for i in range(1, n + 1):
    for j in throws:
        if i >= j[0] and i <= j[1]:
            print('.', end = '')
            break
        else:
            print('I', end = '')


#---------------------------------------------------------------------------      

#task16---------------------------------------------------------------------
''' Известно, что на доске 8×8 можно расставить 8 ферзей так,
чтобы они не били друг друга. Вам дана расстановка 8 ферзей на доске,
определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 —
координаты 8 ферзей. Если ферзи не бьют друг друга, выведите слово NO,
иначе выведите YES.  '''

#input   
queens = [[int(i) for i in input().split()] for j in range(8)]

#main
beat = False

for i in range(len(queens)):
    x1 = queens[i][0]
    y1 = queens[i][1]
    for j in range(len(queens)):
        if i == j:
            continue
        x2 = queens[j][0]
        y2 = queens[j][1]
        if x1 == x2 or y1 == y2 or abs(x1-x2) == abs(y1-y2):
            beat = True
        break

#output
if beat:
    print('YES')
else:
    print('NO')

#---------------------------------------------------------------------------























    









