#task1..........................................................................
'''
Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
Во всех задачах считывайте входные данные через input() и выводите ответ через print().
'''

list = input().split()
for i in range(len(list)):
    if i % 2 == 0:
        print(list[i])


#task2............................................................................
'''
Выведите все четные элементы списка. При этом используйте цикл for, перебирающий элементы списка, а не их индексы!
'''

for element in input().split():
    if int(element) % 2 == 0:
        print (element)


#task3..........................................................................
'''
Дан список чисел. Выведите все элементы списка, которые больше предыдущего элемента.
'''
list = [int(i) for i in input().split()]
for i in range(1 , len(list)):
    if list[i] > list[i-1]:
        print(list[i])





#task4..........................................................................
'''
Дан список чисел.
 Если в нем есть два соседних элемента одного знака, выведите эти числа.
  Если соседних элементов одного знака нет — не выводите ничего.
   Если таких пар соседей несколько — выведите первую пару.
'''
list = [int(i) for i in input().split()]
for i in range (1 , len(list)):
    if list[i] * list[i-1] > 0  :
        print(list[i-1] , list[i])
        break





#task5..........................................................................
'''
Дан список чисел. Определите, сколько в этом списке элементов, которые больше двух своих соседей,
 и выведите количество таких элементов.
 Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
'''

list = [int(i) for i in input().split()]
count = 0
for i in range (1 , len(list) - 1):
    if list[i-1]< list[i] > list[i+1]:
        count+= 1
print(count)



#task6..........................................................................
'''
Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке.
 Если наибольших элементов несколько, выведите индекс первого из них.
'''

list = [int(i) for i in input().split()]
maxIdx = 0
for i in range(1, len(list)):
    if list[i] >list[maxIdx]  :
        maxIdx = i
print(list[maxIdx] , maxIdx)





#task7..........................................................................
'''
Петя перешёл в другую школу.
На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел, означающих рост каждого человека в строю.
 После этого вводится число X – рост Пети. Все числа во входных данных натуральные и не превышают 200.

Выведите номер, под которым Петя должен встать в строй.
 Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.


'''
list = [float(i) for i in input().split()]
len = len(list)
height =float(input())
pos = 0
for i in range(len):
    pos = i
    if  height > list[pos]:
        break
if pos == len - 1 and list[pos] >= height :
    pos += 1
print(pos+1)






#task8..........................................................................
'''
Дан список, упорядоченный по неубыванию элементов в нем.
 Определите, сколько в нем различных элементов.
'''
list = [int(i) for i in input().split()]
count = 1
for i in range(1, len(list)) :
    if list[i-1] != list[i] :
        count += 1
print(count)



#task9..........................................................................
'''
Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.).
Если элементов нечетное число, то последний элемент остается на своем месте.
'''
list = [int(i) for i in input().split()]
for i in range(1 ,len(list) ,2 ):
    tmp = list[i-1]
    list[i-1] = list[i]
    list[i] = tmp
for elem in list:
    print(elem, end= ' ' )





#task10..........................................................................
'''

В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.
'''
list = [int(i) for i in input().split()]
minIdx = 0
maxIdx = 0
for i in range(1, len(list)):
    if list[i] >list[maxIdx]  :
        maxIdx = i
    if list[i] <list[minIdx]  :
        minIdx = i
list[minIdx], list[maxIdx] = list[maxIdx] ,list[minIdx]

print(' '.join([str(i) for i in list]))




#task11..........................................................................
'''
Дан список из чисел и индекс элемента в списке k.
 Удалите из списка элемент с индексом k, сдвинув влево все элементы, стоящие правее элемента с индексом k.
Программа получает на вход список, затем число k.
 Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров.

Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов.
 Также нельзя использовать дополнительный список.
 Также не следует использовать метод pop(k) с параметром.
'''
list = [int(i) for i in input().split()]
k = int(input ())
list.pop(k)
print(' '.join([str(i) for i in list]))




#task12..........................................................................
'''
Дан список целых чисел, число k и значение C.
Необходимо вставить в список на позицию с индексом k элемент, равный C, сдвинув все элементы, имевшие индекс не менее k, вправо.
'''
list = [int(i) for i in input().split()]
kc =  [int(i) for i in input().split()]
list.insert(kc[0], kc[1])
print(' '.join([str(i) for i in list]))





#task13..........................................................................
'''
Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
'''

list = [int(i) for i in input().split()]
count = 0
for elem in list:
    num = list.count(elem)
    count += num-1
print(int(count / 2 ))




#task14..........................................................................
'''
Дан список. Выведите те его элементы, которые встречаются в списке только один раз.
Элементы нужно выводить в том порядке, в котором они встречаются в списке.
'''
list = [int(i) for i in input().split()]
count = 0
for elem in list:
    if list.count(elem)==1:
        print(elem)






#task15..........................................................................
'''
N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N.
 Затем по этому ряду бросили K шаров, при этом i-й шар сбил все кегли с номерами от li до ri включительно.
  Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество бросков K.
 Далее идет K пар чисел li, ri, при этом 1≤ li≤ ri≤ N.

Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если j-я кегля осталась стоять, или “.”, если j-я кегля была сбита.
'''
nk = [int(i) for i in input().split()]
tenPins = ['I']*nk[0]
for i in range(nk[1]):
    lr = [int(i) for i in input().split()]
    for tenPin in range(lr[0] , lr[1]+1):
        tenPins[tenPin-1]='.'
print(''.join(tenPins))






#task16..........................................................................
'''
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга.
Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 — координаты 8 ферзей.
Если ферзи не бьют друг друга, выведите слово NO, иначе выведите YES.
'''
def checkPoints(p1,p2):
    return not isSamePoint(p1,p2) and (p1[0]==p2[0] or p1[1]==p2[1]  or  p1[0]-p1[1]==p2[0]-p2[1] or p1[0]+p1[1]==p2[0]+p2[1])


def isSamePoint(p1,p2):
    return p1[0]==p2[0] and p1[1]==p2[1]

coords=[[]*2]*8
isBitten = False
for p in range(8):
    coords[p] = [int(i) for i in input().split()]

for p1 in coords :
    for p2 in coords:
        if checkPoints(p1,p2):
            isBitten = True
            break
    if isBitten :
        break

if isBitten :
    answer= "YES"
else:
    answer="NO"
print(answer)
