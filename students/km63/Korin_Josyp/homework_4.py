#task1-----------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных 
чисел, не превосходящие N, в порядке возрастания.
"""
n = int(input(""))
i = 1
while i**2<=n:
	print(i**2)
	i += 1
	
#--------------------------------------------------------------

#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный
делитель, отличный от 1.
"""
n = int(input())
i = 2
while n%i != 0:
    i += 1
print(i)
#-----------------------------------------------------------------

#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень 
двойки, не превосходящую N. Выведите показатель степени и саму 
степень.
Операцией возведения в степень пользоваться нельзя!
"""
n = int(input())

two_in_power = 2

power = 1

while two_in_power <= n:

    two_in_power *= 2

    power += 1

print(power - 1, two_in_power // 2)
#---------------------------------------------------------------

#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый 
день увеличивал пробег на 10% от предыдущего значения. По данному 
числу y определите номер дня, на который пробег спортсмена
составит не менее y километров.
Программа получает на вход действительные числа x и y и должна
вывести одно натуральное число.
"""
x = int(input())
y = int(input())
i = 1
while y>x:
    x *=1.1
    i += 1
print(i)
#-----------------------------------------------------------------

#task5----------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p 
процентов, после чего дробная часть копеек отбрасывается. 
Определите, через сколько лет вклад составит не менее y рублей.
Выражение «дробная часть копеек отбрасывается» означает, что если
у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек,
то после округления у вас получится 123 рубля и 45 копеек, т.е. 
123.45 рублей.
Программа получает на вход три натуральных числа: x, p, y и должна
вывести одно целое число.
"""
x = float(input())
p = float(input())
y = float(input())
balance = x
i = 0
while balance < y:
    balance = int(balance*100)/100
    balance = round(balance, 2)
    i += 1
print(i)
#-----------------------------------------------------------------

#task6-----------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательны-
-х чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого 
программа должна закончить свою работу и вывести количество членов 
последовательности (не считая завершающего числа 0). Числа, 
следующие за числом 0, считывать не нужно.
"""
i = 0
while True:
    n = int(input())
    if n == 0:
        break
    i += 1
print(i)
#---------------------------------------------------------------

#task7----------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся
числом 0. В этой и во всех следующих задачах числа, следующие за
первым нулем, учитывать не нужно.
"""
i = 0
while True:
    n = int(input())
    if n == 0:
        break
    i += n
print(i)
#--------------------------------------------------------------

#task8----------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, 
завершающейся числом 0.
"""
i = 0
c = 0
while True:
    n = int(input())
    if n == 0:
        break
    i += n
    c += 1
print(i/c)
#-----------------------------------------------------------------

#task9--------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите значение наибольшего элемента последовательности.
"""
i = 0
max = 0
while True:
    n = int(input())
    if n == 0:
        break
    if max<n:
        max = n
print(max)
#-----------------------------------------------------------------

#task10---------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом
0. Определите индекс наибольшего элемента последовательности. Если 
наибольших элементов несколько, выведите индекс первого из них. 
Нумерация элементов начинается с нуля.
"""
i = 0
max = 0
max_i = 0
while True:
    n = int(input())
    if n == 0:
        break
    if max<n:
        max = n
        max_i = i
    i += 1
print(max_i)
#-----------------------------------------------------------------

#task11--------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завер-
-шающейся числом 0.
"""
i = 0
e = 0
while True:
    n = int(input())
    if n == 0:
        break
    if n%2 == 0:
        i += 1
print(i)
#-----------------------------------------------------------------

#task12-------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите, сколько элементов этой последовательности 
больше предыдущего элемента.
"""
i = 0
e = float()
while True:
    n = int(input())
    if n == 0:
        break
    if n > e:
        i += 1
    e = n
print(i)
#-----------------------------------------------------------------

#task13---------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и 
завершается числом 0. Определите значение второго по величине 
элемента в этой последовательности. Гарантируется, что в 
последовательности есть хотя бы два элемента.
"""
#--------------------------------------------------------------
first_max = int(input())
second_max = int(input())
if first_max < second_max:
    first_max, second_max = second_max, first_max
element = int(input())
while element != 0:
    if element > first_max:
        second_max, first_max = first_max, element
    elif element > second_max:
        second_max = element
    element = int(input())
print(second_max)
#-----------------------------------------------------------------

#task14---------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите, сколько элементов этой последовательности 
равны ее наибольшему элементу.
"""
maximum = 0
num_maximal = 0
element = -1
while element != 0:
    element = int(input())
    if element > maximum:
        maximum, num_maximal = element, 1
    elif element == maximum:
        num_maximal += 1        
print(num_maximal)
#-----------------------------------------------------------------

#task15--------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
По данному числу n определите n-е число Фибоначчи φn.
Эту задачу можно решать и циклом for.
"""

n = int(input())
if n == 0:
    print(0)
else:
    a, b = 0, 1
    for i in range(2, n + 1):
        a, b = b, a + b
    print(b)
#-----------------------------------------------------------------

#task16---------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом 
Фибоначчи оно является, то есть выведите такое число n, что 
φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""
a = int(input())
if a == 0:
    print(0)
else:
    fib_prev, fib_next = 0, 1
    n = 1
    while fib_next <= a:
        if fib_next == a:
            print(n)
            break
        fib_prev, fib_next = fib_next, fib_prev + fib_next
        n += 1
    else:
        print(-1)
#-----------------------------------------------------------------

#task17----------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите, какое наибольшее число подряд идущих элементов этой
последовательности равны друг другу.
"""
prev = -1
curr_rep_len = 0
max_rep_len = 0
element = int(input())
while element != 0:
    if prev == element:
        curr_rep_len += 1
    else:
        prev = element
        max_rep_len = max(max_rep_len, curr_rep_len)
        curr_rep_len = 1
    element = int(input())
max_rep_len = max(max_rep_len, curr_rep_len)
print(max_rep_len)
#--------------------------------------------------------------

#task18------------------------------------------------------------
"""
Дана последовательность натуральных чисел x1x1, x2x2, ..., xnxn. Стандартным отклонением называется величина
где s=x1+x2+…+xnns=x1+x2+…+xnn — среднее арифметическое последовательности.
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""
i = 1
up = 0
l = []
suM = 0
while True:
    x = int(input())
    if x == 0:
        break
    l.append(x)
    suM += x
    i += 1
s = suM/(i-1)
n = i-1
for i in l:
    up += (i - s) ** 2
print((up/(n-1)) ** 0.5)
#--------------------------------------------------------------
