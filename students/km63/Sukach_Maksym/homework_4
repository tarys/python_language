#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных 
чисел, не превосходящие N, в порядке возрастания.
"""
n = int(input(""))
i = 1
sq = 1
while sq<=n:
	print(sq)
	i += 1
	sq = i**2
#-----------------------------------------------------------------

#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный
делитель, отличный от 1.
"""
num = int(input(""))
i = 2
while num%i != 0:
    i += 1
print(i)
#-----------------------------------------------------------------

#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень 
двойки, не превосходящую N. Выведите показатель степени и саму 
степень.

Операцией возведения в степень пользоваться нельзя!
"""
n = int(input(""))
i = 0
two_power = 1
while (two_power*2)<n:
    i += 1
    two_power *= 2
    
print(i,two_power)
#-----------------------------------------------------------------

#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый 
день увеличивал пробег на 10% от предыдущего значения. По данному 
числу y определите номер дня, на который пробег спортсмена
составит не менее y километров.

Программа получает на вход действительные числа x и y и должна
вывести одно натуральное число.
"""
x = int(input(""))
y = int(input(""))
i = 1
tvar = x
while y>tvar:
    tvar += tvar * 0.1
    i += 1
print(i)
#-----------------------------------------------------------------

#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p 
процентов, после чего дробная часть копеек отбрасывается. 
Определите, через сколько лет вклад составит не менее y рублей.

Выражение «дробная часть копеек отбрасывается» означает, что если
у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек,
то после округления у вас получится 123 рубля и 45 копеек, т.е. 
123.45 рублей.

Программа получает на вход три натуральных числа: x, p, y и должна
вывести одно целое число.
"""
x = float(input(""))
p = float(input(""))
y = float(input(""))
balance = x
i = 0
while balance < y:
    balance += balance * p/100
    balance = round(balance, 2)
    i += 1
print(i)
#-----------------------------------------------------------------

#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательны-
-х чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого 
программа должна закончить свою работу и вывести количество членов 
последовательности (не считая завершающего числа 0). Числа, 
следующие за числом 0, считывать не нужно.
"""
i = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    i += 1
print(i)
#-----------------------------------------------------------------

#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся
числом 0. В этой и во всех следующих задачах числа, следующие за
первым нулем, учитывать не нужно.
"""
i = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    i += n
print(i)
#-----------------------------------------------------------------

#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, 
завершающейся числом 0.
"""
i = 0
c = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    i += n
    c += 1
print(i/c)
#-----------------------------------------------------------------

#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите значение наибольшего элемента последовательности.
"""
i = 0
max = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    if max<n:
        max = n
print(max)
#-----------------------------------------------------------------

#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом
0. Определите индекс наибольшего элемента последовательности. Если 
наибольших элементов несколько, выведите индекс первого из них. 
Нумерация элементов начинается с нуля.
"""
i = 0
max = 0
max_i = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    if max<n:
        max = n
        max_i = i
    i += 1
print(max_i)
#-----------------------------------------------------------------

#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завер-
-шающейся числом 0.
"""
i = 0
evens = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    if n%2 == 0:
        i += 1
print(i)
#-----------------------------------------------------------------

#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите, сколько элементов этой последовательности 
больше предыдущего элемента.
"""
i = 0
prev = float('Inf')
while True:
    n = int(input(""))
    if n == 0:
        break
    if n > prev:
        i += 1
    prev = n
print(i)
#-----------------------------------------------------------------

#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и 
завершается числом 0. Определите значение второго по величине 
элемента в этой последовательности. Гарантируется, что в 
последовательности есть хотя бы два элемента.
"""
#-----------------------------------------------------------------
i = 0
max = 0
n_max = 0
l = []
while True:
    n = int(input(""))
    l.append(n)
    if n == 0:
        break
l.sort()
print(l[-2])
#-----------------------------------------------------------------

#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается 
числом 0. Определите, сколько элементов этой последовательности 
равны ее наибольшему элементу.
"""
max = 0
max_i = 0
l = []
k = 0
while True:
    n = int(input(""))
    if n == 0:
        break
    l.append(n)
    if max<n:
        max = n
for i in l:
    if i == max:
        k += 1
print(k)
#-----------------------------------------------------------------

#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""
n = int(input(""))
if n == 0:
    print(0)
else:
    f = []
    f.append(0)
    f.append(1)
    i = 2
    while i<=n:
        f.append(f[i-1] + f[i-2])
        i += 1
    print(f[-1])
#-----------------------------------------------------------------

#task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом 
Фибоначчи оно является, то есть выведите такое число n, что 
φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""
a = int(input(""))
f1 = 0
f2 = 1
n = 0
fibo = 0
while fibo != a:
    fibo = f1 + f2
    f2 = f1
    f1 = fibo
    n += 1
    if fibo > a:
        n = -1
        break
print(n)
#-----------------------------------------------------------------

#task17------------------------------------------------------------
"""
"""
#-----------------------------------------------------------------

#task18------------------------------------------------------------
"""
"""
#-----------------------------------------------------------------
