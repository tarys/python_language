#task1----------------------------------------------------------
'''
Выведите все элементы списка с четными индексами (то есть A[0], 
A[2], A[4], ...).
'''
s = input().split(' ')
for i in range(0,len(s),2):
  print(s[i])

#----------------------------------------------------------------

#task2----------------------------------------------------------
'''
Выведите все четные элементы списка. При этом используйте цикл 
for, перебирающий элементы списка, а не их индексы!
'''
s = input().split(' ')
for i in s:
  if i//2 == 0:
    print(i, end=' ')
    
#task3---------------------------------------------------------
'''
Дан список чисел. Выведите все элементы списка, которые больше
предыдущего элемента.
'''
s = input().split(' ')
for i in range(1,len(s)):
  if s[i]>s[i-1]:
    print(s[i], end=' ')
#---------------------------------------------------------------

#task4---------------------------------------------------------
'''
Дан список чисел. Если в нем есть два соседних элемента одн
ого знака, выведите эти числа. Если соседних элементов одного 
знака нет — не выводите ничего. Если таких пар соседей несколь
ко — выведите первую пару.
'''
s = input().split(' ')
for i in range(1,len(s),2):
  if s[i]*s[i-1]>0:
      print(s[i-1], ' ', s[i])
      break

#---------------------------------------------------------------

#task5---------------------------------------------------------
'''
Дан список чисел. Определите, сколько в этом списке элементов,
которые больше двух своих соседей, и выведите количество таких
элементов. Крайние элементы списка никогда не учитываются, 
поскольку у них недостаточно соседей.
'''
k=0
s = input().split(' ')
for i in range(1,len(s)-1):
  if s[i]>s[i-1] and s[i]>s[i+1]:
     k+=1
print(k)
#---------------------------------------------------------------

#task6---------------------------------------------------------
'''
Дан список чисел. Выведите значение наибольшего элемента в спи
ске, а затем индекс этого элемента в списке. Если наибольших 
элементов несколько, выведите индекс первого из них.
'''
s = input().split(' ')
max = int(s[0])
index_of_max = 0
for i in range(1,len(s)):
    if max<int(s[i]):
        print(max,'<',s[i])
        max = int(s[i])
        index_of_max = i
print(index_of_max)
#---------------------------------------------------------------


#task7---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task8---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task9---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task10---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task11---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task12---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task13---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task14---------------------------------------------------------
'''
'''
#---------------------------------------------------------------


#task15---------------------------------------------------------
'''
N кеглей выставили в один ряд, занумеровав их слева направо 
числами от 1 до N. Затем по этому ряду бросили K шаров, при 
этом i-й шар сбил все кегли с номерами от li до ri включительно.
Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество 
бросков K. Далее идет K пар чисел li, ri, при этом 1≤ li≤ ri≤ N.

Программа должна вывести последовательность из N символов, 
где j-й символ есть “I”, если j-я кегля осталась стоять, или
“.”, если j-я кегля была сбита.
'''
s = input().split(' ')
outs = ["I" for i in range(int(s[0]))]
print(outs)
for i in range(int(s[1])):
    ns = input().split(' ')
    for f in range(int(ns[0])-1, int(ns[1])):
        outs[f] = "."
for i in outs:
    print(i, end='')
#---------------------------------------------------------------


#task16---------------------------------------------------------
'''
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы 
они не били друг друга. Вам дана расстановка 8 ферзей на доске, 
определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 
до 8 — координаты 8 ферзей. Если ферзи не бьют друг друга,
выведите слово NO, иначе выведите YES.
'''
lst1 = []
lst2 = []
for i in range(8):
    s = input().split(' ')
    s[0] = int(s[0])
    s[1] = int(s[1])
    lst1.append(s[0])
    lst2.append(s[1])
if len(lst1) == len(set(lst1)) and len(lst2) == len(set(lst2)):
    print('NO')
else:
    print('YES')
#--------------------------------------------------------------
