# task1------------------------------------------------------------
"""
Даны четыре действительных числа: x1, y1, x2, y2. Напишите функцию distance(x1, y1, x2, y2),
вычисляющая расстояние между точкой (x1,y1) и (x2,y2).
Считайте четыре действительных числа и выведите результат работы этой функции.
Если вы не знаете, как решить эту задачу, то вы, возможно, не изучали в школе теорему Пифагора.
Попробуйте прочитать о ней на Википедии.
"""


def distance(x1, y1, x2, y2):
    dist = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5
    print (dist)

x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())

distance(x1, y1, x2, y2)

# -----------------------------------------------------------------


# task2------------------------------------------------------------
"""
Дано действительное положительное число a и целоe число n.
Вычислите an. Решение оформите в виде функции power(a, n).
Стандартной функцией возведения в степень пользоваться нельзя.
"""


def power(a, n):
    p = a ** n
    print (p)


a = float(input())
n = int(input())

power(a, n)

# -----------------------------------------------------------------


# task3------------------------------------------------------------
"""
Дано действительное положительное число a и целое неотрицательное число n. Вычислите an не используя циклы, возведение в степень через ** и функцию math.pow(), а используя рекуррентное соотношение an=a⋅an-1.
Решение оформите в виде функции power(a, n).
"""

a = float(input())
n = int(input())


def power(a, n):
    if n == 0:
        return 1
    elif n > 0:
        return a * power(a, n - 1)
    else:
        return 1 / a * power(a, n + 1)


print (power(a, n))

# -----------------------------------------------------------------


# task4------------------------------------------------------------
"""
Напишите функцию fib(n), которая по данному целому неотрицательному n возвращает n-e число Фибоначчи.
В этой задаче нельзя использовать циклы — используйте рекурсию.
"""

n = int(input())


def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    elif n > 1:
        return fib(n - 2) + fib(n - 1)


print (fib(n))

# -----------------------------------------------------------------
