# task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел,
не превосходящие N, в порядке возрастания.
"""

n = int(input())
i = 1
while i ** 2 <= n:
    print(i ** 2)
    i += 1

# -----------------------------------------------------------------


# task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2.
Выведите его наименьший натуральный делитель, отличный от 1.
"""

n = int(input())
i = 2
while n % i != 0:
    i += 1
print(i)

# -----------------------------------------------------------------


# task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки,
не превосходящую N. Выведите показатель степени и саму степень.

Операцией возведения в степень пользоваться нельзя!
"""

n = int(input())
p_of_two = 2
p = 1
while p_of_two <= n:
    p_of_two *= 2
    p += 1

print(p - 1, p_of_two // 2)

# -----------------------------------------------------------------


# task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров,
а затем он каждый день увеличивал пробег на 10% от предыдущего значения.
По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.

Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""

x = int(input())
y = int(input())
i = 1
while x < y:
    x *= 1.1
    i += 1
print(i)

# -----------------------------------------------------------------


# task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов,
после чего дробная часть копеек отбрасывается.
Определите, через сколько лет вклад составит не менее y рублей.

Выражение «дробная часть копеек отбрасывается» означает,
что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек,
то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.

Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""

x = float(input())
p = int(input())
y = int(input())

i = 0
while x < y:
    x = x + x * p / 100
    x = float(int(x * 100)) / 100
    i += 1
print(i)

# -----------------------------------------------------------------


# task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел,
каждое число записано в отдельной строке. Последовательность завершается числом 0,
при считывании которого программа должна закончить свою работу и вывести количество членов последовательности
(не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""
n = 1
i = 0
while n != 0:
    n = int(input())
    i += 1

print(i - 1)

# -----------------------------------------------------------------


# task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0.
В этой и во всех следующих задачах числа, следующие за первым нулем, учитывать не нужно.
"""

n = 1
s = 0
while n != 0:
    n = int(input())
    s += n
print(s)

# -----------------------------------------------------------------


# task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""
sum = len = 0
el = int(input())
while el != 0:
    sum += el
    len += 1
    el = int(input())
print(sum / len)

# -----------------------------------------------------------------


# task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите значение наибольшего элемента последовательности.
"""

max = 0
el = -1
while el != 0:
    el = int(input())
    if el > max:
        max = el
print(max)

# -----------------------------------------------------------------


# task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите индекс наибольшего элемента последовательности.
Если наибольших элементов несколько, выведите индекс первого из них.
Нумерация элементов начинается с нуля.
"""
i = 1
max_i = 1
max_n = 0
n = 1
while n != 0:
    n = int(input())
    if n > max_n:
        max_i = i
        max_n = n
    i += 1
print(max_i)

# -----------------------------------------------------------------


# task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""
n = -1
el = -1
while el != 0:
    el = int(input())
    if el % 2 == 0:
        n += 1
print(n)

# -----------------------------------------------------------------


# task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""
p = int(input())
ans = 0
while p != 0:
    num = int(input())
    if num != 0 and p < num:
        ans += 1
    p = num
print(ans)

# -----------------------------------------------------------------


# task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0.
Определите значение второго по величине элемента в этой последовательности.
Гарантируется, что в последовательности есть хотя бы два элемента.
"""
f_max = int(input())
s_max = int(input())
if f_max < s_max:
    f_max, s_max = s_max, f_max
el = int(input())
while el != 0:
    if el > f_max:
        s_max, f_max = f_max, el
    elif el > s_max:
        s_max = el
    el = int(input())
print(s_max)

# -----------------------------------------------------------------


# task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0.
Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""
max = 0
i_max = 0
el = -1
while el != 0:
    el = int(input())
    if el > max:
        max, i_max = el, 1
    elif el == max:
        i_max += 1
print(i_max)

# -----------------------------------------------------------------


# task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:

φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.

По данному числу n определите n-е число Фибоначчи φn.

Эту задачу можно решать и циклом for.
"""
n = int(input())
if n == 0:
    print(0)
else:
    a, b = 0, 1
    for i in range(2, n + 1):
        a, b = b, a + b
    print(b)

# -----------------------------------------------------------------


# task16------------------------------------------------------------
"""
Дано натуральное число A. Определите, каким по счету числом Фибоначчи оно является,
то есть выведите такое число n, что φn = A. Если А не является числом Фибоначчи, выведите число -1.
"""
a = int(input())
if a == 0:
    print(0)
else:
    prev, next = 0, 1
    n = 1
    while next <= a:
        if next == a:
            print(n)
            break
        prev, next = next, prev + next
        n += 1
    else:
        print(-1)

# -----------------------------------------------------------------


# task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0.
Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""

result = 1
seq = 0
prev = 0
cur_seq = 0
number = int(input())
while number > 0:
    if prev == number:
        cur_seq += 1
    else:
        cur_seq = 1
    if cur_seq != 1 and cur_seq > result:
        result = cur_seq
    prev = number
    number = int(input())

print(result)

# -----------------------------------------------------------------


# task18------------------------------------------------------------
"""
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""

sum_num = 0
sum_power = 0
n = - 1
number = 1
while number != 0:
    number = int(input())
    sum_num += number
    sum_power += number ** 2
    n += 1
result = ((sum_power - sum_num ** 2 / n) / (n - 1)) ** 0.5
print(result)



# -----------------------------------------------------------------
