#TASK_1------------------------------------------------------------------------
'''
Дано нечетное число n. Создайте двумерный массив из n×n элементов,  
заполнив его символами "." (каждый элемент массива является строкой из одного символа).  
Затем заполните символами "*" среднюю строку массива, средний столбец массива,  
главную диагональ и побочную диагональ.
В результате единицы в массиве должны образовывать изображение звездочки.
Выведите полученный массив на экран, разделяя элементы массива пробелами.
'''

n = int(input())
j,t = int(n-1),int((n-1)/2)
a = [['.'] * t + ['*'] + ['.'] * t for i in range(n)]
a[t] = ['*'] * n
for i in range(n):
    a[i][i] = '*'
    a[j][i] = '*'
    j -= 1
for row in a:
    print(' '.join([str(elem) for elem in row]))
    
#------------------------------------------------------------------------------

#TASK_2------------------------------------------------------------------------
'''
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу. 
На главной диагонали должны быть записаны числа 0. 
На двух диагоналях, прилегающих к главной, числа 1. 
На следующих двух диагоналях числа 2, и т.д.
'''

n = int(input())
a = [["."] * n for i in range(n)]
for i in range(n):
    for j in range(n):
        a[i][j] = abs(j - i)
for row in a:
    print(' '.join([str(elem) for elem in row]))
    
#------------------------------------------------------------------------------

#TASK_3------------------------------------------------------------------------
'''
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу:
Числа на диагонали, идущей из правого верхнего в левый нижний угол равны 1.
Числа, стоящие выше этой диагонали, равны 0.
Числа, стоящие ниже этой диагонали, равны 2.
Полученный массив выведите на экран. Числа в строке разделяйте одним пробелом.
'''

n = int(input())
a = [[0] * n for i in range(n)]
for i in range(n):
    a[i][(n - 1)- i] = 1
    for j in range(n - i, n):
        a[i][j] = 2 
for row in a:
    print(' '.join([str(elem) for elem in row]))
    
    
#-----------------------------------------------------------------------------
