#task1------------------------------------------------------------
"""
По данному целому числу N распечатайте все квадраты натуральных чисел, не превосходящие N, в порядке возрастания.
"""

n=int(input('Введите целое число N:'))
i=1
while i**2<=n:
    print(i**2)
    i+=1
    
#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Дано целое число, не меньшее 2. Выведите его наименьший натуральный делитель, отличный от 1.
"""

k = int (input ('Введите целое число:'))
i=2
while i<=k:
    if k%i==0:
        print (i)
        break
    i+=1

#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
По данному натуральному числу N найдите наибольшую целую степень двойки, не превосходящую N. 
Выведите показатель степени и саму степень.
Операцией возведения в степень пользоваться нельзя!
"""

n=int(input('Введите натуральное число N:'))
twoinstepen=2
stepen=1
while twoinstepen<=n:
    twoinstepen*=2
    stepen+=1
print(stepen-1,twoinstepen//2)

#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
В первый день спортсмен пробежал x километров, а затем он каждый день увеличивал пробег на 10% от предыдущего значения. 
По данному числу y определите номер дня, на который пробег спортсмена составит не менее y километров.
Программа получает на вход действительные числа x и y и должна вывести одно натуральное число.
"""

x=float(input('В первый день спортсмен пробежал:'))
y=float(input('Во второй день спортсмен пробежал:'))
num_d=1
while x<y:
  x=x*1.1
  num_d+=1
print(num_d)

#-----------------------------------------------------------------


#task5------------------------------------------------------------
"""
Вклад в банке составляет x рублей. Ежегодно он увеличивается на p процентов, после чего дробная часть копеек отбрасывается. 
Определите, через сколько лет вклад составит не менее y рублей.
Выражение «дробная часть копеек отбрасывается» означает, что если у вас оказалось 123.4567 рублей, т. е. 123 рубля и 45.67 копеек, 
то после округления у вас получится 123 рубля и 45 копеек, т.е. 123.45 рублей.
Программа получает на вход три натуральных числа: x, p, y и должна вывести одно целое число.
"""

x = float(input('Введите первое натуральное число x:'))
p = float(input('Введите второе натуральное число p:'))
y = float(input('Введите третье натуральное число y:'))
i=0
while x < y:
    x = x * (1 + p/100)
    i += 1
print(i)

#-----------------------------------------------------------------


#task6------------------------------------------------------------
"""
Программа получает на вход последовательность целых неотрицательных чисел, каждое число записано в отдельной строке. 
Последовательность завершается числом 0, при считывании которого программа должна закончить свою работу и 
вывести количество членов последовательности (не считая завершающего числа 0). Числа, следующие за числом 0, считывать не нужно.
"""

i = 0
while int(input('Вводите последовательность целых неотрицательных чисел:'))!=0:
    i += 1
print(i)

#-----------------------------------------------------------------


#task7------------------------------------------------------------
"""
Определите сумму всех элементов последовательности, завершающейся числом 0. В этой и во всех следующих задачах числа, 
следующие за первым нулем, учитывать не нужно.
"""

summa=0
e=1
while e!=0:
    e = int(input('Введите последовательность элементов:'))
    summa+=e
print(summa)

#-----------------------------------------------------------------


#task8------------------------------------------------------------
"""
Определите среднее значение всех элементов последовательности, завершающейся числом 0.
"""

kilkelemposl = 0
summa = 0
e = int ( input('Введите последовательность всех элементов:')) 
while e!= 0:
    kilkelemposl += 1
    summa += e
    e = int(input('Введите элементы:'))
print(summa/kilkelemposl )

#-----------------------------------------------------------------


#task9------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите значение наибольшего элемента последовательности.
"""

n = 1
max = 0 
while n!= 0:
    n= int(input('Введите последовательность элементов:'))
    if n > max:
        max = n
    else:
        max = max
print(max)


#-----------------------------------------------------------------


#task10------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите индекс наибольшего элемента последовательности. 
Если наибольших элементов несколько, выведите индекс первого из них. 
Нумерация элементов начинается с нуля.
"""

max = 0
max_indeks = -1
n = -1
kil = 0
while n!= 0:
    n= int(input('Введите последовательность из натуральных чисел:'))
    if n > max:
        max = n
        max_indeks = kil
    kil += 1
print(max_indeks)

#-----------------------------------------------------------------


#task11------------------------------------------------------------
"""
Определите количество четных элементов в последовательности, завершающейся числом 0.
"""

number = -1
e = -1
while e!= 0:
    e = int(input('Введите последовательность элементов::'))
    if e % 2 == 0:
        number += 1
print(number)

#-----------------------------------------------------------------


#task12------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности больше предыдущего элемента.
"""

prevedush = int(input('Элемент:'))
n = 0
while prevedush != 0:
    next = int(input('Введите последовательность элементов'))
    if next != 0 and prevedush < next:
        n += 1
    prevedush = next
print(n)


#-----------------------------------------------------------------


#task13------------------------------------------------------------
"""
Последовательность состоит из различных натуральных чисел и завершается числом 0. 
Определите значение второго по величине элемента в этой последовательности. 
Гарантируется, что в последовательности есть хотя бы два элемента.
"""

n=int(input('Введите из скольких различных натуральных чисел сотоит последовательность:'))
max=n
second_max=0
while n!=0:
    n=int(input('Вводите элементы:'))
    if n>max:
        second_max=max
        max=n
    elif n>second_max and n<max:
        second_max=n
print(second_max)

#-----------------------------------------------------------------


#task14------------------------------------------------------------
"""
Последовательность состоит из натуральных чисел и завершается числом 0. 
Определите, сколько элементов этой последовательности равны ее наибольшему элементу.
"""

n=int(input('Элемент:'))
number=1
max=n
while n!=0:
    n=int(input('Введите последовательность элементов:'))
    if n==max:
        number+=1
    if n>max:
        max=n
        number=1
print(number)

#-----------------------------------------------------------------


#task15------------------------------------------------------------
"""
Последовательность Фибоначчи определяется так:
φ0 = 0,  φ1 = 1,  φn = φn−1 + φn−2.
По данному числу n определите n-е число Фибоначчи φn.
Эту задачу можно решать и циклом for.
"""

n = int(input('Введите число n:'))
if n == 0:
    print(0)
else:
    x=0
    y=1
    for i in range(2, n + 1):
        x,y=y,x + y
    print(y)

#-----------------------------------------------------------------


#task16------------------------------------------------------------
"""
Дано натуральное число A. 
Определите, каким по счету числом Фибоначчи оно является, то есть выведите такое число n, что φn = A. 
Если А не является числом Фибоначчи, выведите число -1.
"""

a = int(input('Введите натуральное число A:'))
if a == 0:
    print(0)
else:
    n1, n2 = 0, 1 
    i=1
    while n2<=a:
        if n2==a:
            print(i)
            break
        n1, n2 = n2, n1 + n2
        i += 1
    else:
        print(-1)

#-----------------------------------------------------------------


#task17------------------------------------------------------------
"""
Дана последовательность натуральных чисел, завершающаяся числом 0. 
Определите, какое наибольшее число подряд идущих элементов этой последовательности равны друг другу.
"""

kolichestvo=1
max=1
a=int(input())
while a!=0:
    b=a
    a=int(input())
    if b==a:
        kolichestvo+=1
    elif kolichestvo>max:
        max=kolichestvo
        kolichestvo=1
    else:
        kolichestvo=1
print(max)

#-----------------------------------------------------------------


#task18------------------------------------------------------------
"""
Дана последовательность натуральных чисел x1, x2, ..., xn. Стандартным отклонением называется величина
σ=(x1−s)2+(x2−s)2+…+(xn−s)2n−1−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−√
где s=x1+x2+…+xnn — среднее арифметическое последовательности.
Определите стандартное отклонение для данной последовательности натуральных чисел, завершающейся числом 0.
"""

import math
a=int(input())
kolichestvo=1
summa=a
res=0
square_summa=a*a
while a!=0:
    a=int(input())
    kolichestvo+=1
    summa+=a
    square_summa+=a*a
kolichestvo+=-1
s=summa/kolichestvo
res=math.sqrt((square_summa-2*s*summa+kolichestvo*s*s)/(kolichestvo-1))
print(res)

#-----------------------------------------------------------------
