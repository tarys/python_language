#task1------------------------------------------------------------
"""
Задача «Максимум»
Условие
Найдите индексы первого вхождения максимального элемента. Выведите два числа: номер строки и номер столбца, в которых стоит наибольший элемент в двумерном массиве. Если таких элементов несколько, то выводится тот, у которого меньше номер строки, а если номера строк равны то тот, у которого меньше номер столбца.

Программа получает на вход размеры массива n и m, затем n строк по m чисел в каждой.
"""
n,m=[int(i) for i in input().split()]
a=[[int(i) for i in input().split()]for j in range(n)]

max=a[0][0]
index_1=0
index_2=0
for i in range(len(a)):
    for j in range(len(a[i])):
        if max<a[i][j]:
            max=a[i][j]
            index_1=i
            index_2=j
print(index_1,index_2)
#-----------------------------------------------------------------


#task2------------------------------------------------------------
"""
Задача «Снежинка»
Условие
Дано нечетное число n. Создайте двумерный массив из n×n элементов, заполнив его символами "." (каждый элемент массива является строкой из одного символа).
Затем заполните символами "*" среднюю строку массива, средний столбец массива, главную диагональ и побочную диагональ.
В результате единицы в массиве должны образовывать изображение звездочки.
Выведите полученный массив на экран, разделяя элементы массива пробелами.
"""
n=int(input())
A = [ ["."] * n for i in range(n)]
for i in range(n):
    for j in range(n):
        if i==j:
            A[i][j]="*"
        elif (n//2)==i:
            A[i][j]="*"
        elif (n//2)==j:
            A[i][j]="*"    
        elif (n-j)==(i+1):
            A[i][j]="*"
        else:
            A[i][j]="."
for i in range(n):
    for j in range(n):
        print(A[i][j], end=' ')
    print()
#-----------------------------------------------------------------


#task3------------------------------------------------------------
"""
Задача «Шахматная доска»
Условие
Даны два числа n и m. 
Создайте двумерный массив размером n×m и заполните его символами "." и "*" в шахматном порядке.
В левом верхнем углу должна стоять точка.
"""
n,m=[int(i) for i in input().split()]

A = [ ["."] * m for i in range(n)]
for i in range(n):
    for j in range(m):
        if i%2==0 and j%2==0:
            A[i][j]="."
        elif i%2==1 and j%2==1:
            A[i][j]="."
        else:
            A[i][j]="*"
    
for i in range(n):
    for j in range(m):
        print(A[i][j], end=' ')
    print()
#-----------------------------------------------------------------


#task4------------------------------------------------------------
"""
Задача «Диагонали, параллельные главной»
Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу.
На главной диагонали должны быть записаны числа 0. На двух диагоналях, прилегающих к главной, числа 1. 
На следующих двух диагоналях числа 2, и т.д. 
"""
size = int(input())
matrix = [0] * size
for i in range(size):
    matrix[i] = [0] * size
for k in range(1, size):
    for i in range(size-k):
        for j in range(size-k):
            if i == j:
                matrix[i][j+k] = k
                matrix[i+k][j] = k
for i in range(size):
    for j in range(size):
        print(matrix[i][j], end=' ')
    print()
print_elements(even_elements(input_elements()))
#-----------------------------------------------------------------

#task5------------------------------------------------------------------------------------------------------------------------
"""
Задача «Побочная диагональ»
Условие
Дано число n. Создайте массив размером n×n и заполните его по следующему правилу:

Числа на диагонали, идущей из правого верхнего в левый нижний угол равны 1.

Числа, стоящие выше этой диагонали, равны 0.

Числа, стоящие ниже этой диагонали, равны 2.

Полученный массив выведите на экран. Числа в строке разделяйте одним пробелом.
n = int(input()) 
a = [[0]*n for i in range(n)]
for i in range(n):
    for j in range(n):
        a[i][n-i-1]=1
        if i>j:
            a[i][n-j-1]=2

for row in a:
    print(' '.join([str(elem) for elem in row]))
#-----------------------------------------------------------------

#task6------------------------------------------------------------
"""
Äàí äâóìåðíûé ìàññèâ è äâà ÷èñëà: i è j. Ïîìåíÿéòå â ìàññèâå ñòîëáöû ñ íîìåðàìè i è j è âûâåäèòå ðåçóëüòàò.
Ïðîãðàììà ïîëó÷àåò íà âõîä ðàçìåðû ìàññèâà n è m, çàòåì ýëåìåíòû ìàññèâà, çàòåì ÷èñëà i è j.
Ðåøåíèå îôîðìèòå â âèäå ôóíêöèè swap_columns(a, i, j). 
"""
def swap_columns(matrix, i, j):
    for z in range (a):
        buf=matrix[z][i]
        matrix[z][i]=matrix[z][j]
        matrix[z][j]=buf
    return
size = input().split()
a=int(size[0])
b=int(size[1])
matrix = []
for k in range(a):
    row = input().split()
    for k in range(len(row)):
        row[k] = int(row[k])
    matrix.append(row)
size = input().split()
i=int(size[0])
j=int(size[1])
swap_columns(matrix, i, j)
for i in range(a):
    for j in range(b):
        print(matrix[i][j], end=' ')
    print()
#-----------------------------------------------------------------
