#task1--------------------------------
"""
Даны четыре действительных числа: x1, y1, x2, y2.
Напишите функцию distance(x1, y1, x2, y2),
вычисляющая расстояние между точкой (x1,y1) и (x2,y2).
Считайте четыре действительных числа и выведите результат работы этой функции.
"""
from math import sqrt
def distance(x1,y1,x2,y2):
    dis=0
    dis=sqrt((x1-x2)**2+(y1-y2)**2)
    return dis
    
x1=float(input())
y1=float(input())
x2=float(input())
y2=float(input())
dist=distance(x1,y1,x2,y2)
print(dist)
#---------------------------------

#task2-----------------------------
"""
Дано действительное положительное число a и целоe число n.
Вычислите an. Решение оформите в виде функции power(a, n).
Стандартной функцией возведения в степень пользоваться нельзя.
"""
a=float(input())
n=int(input())
r=1
def power(a,n):
    for i in range(abs(n)):
        global r
        r*=a
    if n>=0:
        return r
    else:
        return 1/r
print(power(a,n))
#-----------------------------

#task3--------------------------
"""
Дано действительное положительное число a и целое неотрицательное число n.
Вычислите an не используя циклы, возведение в степень через ** и функцию math.pow(),
а используя рекуррентное соотношение an=a?an-1.
"""
a=float(input())
n=int(input())
r=1
def power(a,n):
    if n==0:
        return 1
    else:
        return a*power(a,n-1)
        
    
print(power(a,n))
#-----------------------------

#task4--------------------------
"""
Напишите функцию fib(n),
которая по данному целому неотрицательному
n возвращает n-e число Фибоначчи.
"""
n=int(input())
r=1
def fib(n):
    if n==1 or n==2:
        return 1
    else:
        return r*fib(n-1)+r*fib(n-2)
print(fib(n))
#--------------------------------------  
