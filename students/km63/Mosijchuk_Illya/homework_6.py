#task1-----------------------------------------------
"""
Выведите все элементы списка с четными индексами (то есть A[0], A[2], A[4], ...).
"""
list = []
list = input().split(' ')
for i in range(0,len(s),2):
	print(s[i])
#-----------------------------------------------------
Выведите все четные элементы списка. При этом используйте цикл for,
перебирающий элементы списка, а не их индексы!
#task2-----------------------------------------------
"""

"""
list = []
list = input().split(' ')
for i in list:
    if (int(i) % 2) == 0:
        print(i, end=' ')
#----------------------------------------------------

#task3-----------------------------------------------
"""
Дан список чисел. Выведите все элементы списка, которые больше
предыдущего элемента.
"""
list = []
list = input().split(' ')
for i in range(1,len(s)):
	if s[i]>s[i-1]:
		print(s[i], end=' ')

#----------------------------------------------------

#task4-----------------------------------------------
"""
Дан список чисел. Если в нем есть два соседних элемента 
одного знака, выведите эти числа. Если соседних элементов одного 
знака нет — не выводите ничего.
Если таких пар соседей несколько — выведите первую пару.
"""
list = []
list = input().split(' ')
for i in range(1,len(s),2):
	if s[i]*s[i-1]>0:
		print(s[i-1], ' ', s[i])
		break
#----------------------------------------------------

#task5-----------------------------------------------
"""
Дан список чисел. Определите, сколько в этом списке элементов,
которые больше двух своих соседей, и выведите количество таких элементов.
Крайние элементы списка никогда не учитываются,
поскольку у них недостаточно соседей.
"""
count = 0
list_int = []
list_int = input().split(' ')
for i in range ( 1 , len ( list_int ) - 1 ) :
    if list_int [ i ] > list_int [ i - 1 ] and list_int [ i ] > list_int[ i + 1 ] :
        count += 1
print(count)
#----------------------------------------------------

#task6-----------------------------------------------
"""
Дан список чисел. Выведите значение наибольшего элемента в списке, а затем индекс этого элемента в списке.
Если наибольших элементов несколько, выведите индекс первого из них.
"""
i_max = 0
list = []
list = input().split(' ')
max_elem = max(list)
i_max = list_A.index(max_elem) 
print(max_elem, i_max)

#----------------------------------------------------

#task7-----------------------------------------------
"""
Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю. Помогите ему это сделать.
Программа получает на вход невозрастающую последовательность натуральных чисел,
означающих рост каждого человека в строю. После этого вводится число X – рост Пети.
Все числа во входных данных натуральные и не превышают 200.
Выведите номер, под которым Петя должен встать в строй.
Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.
"""
count = 0
list = []
list = input().split(' ')
P_height = int(input())
for element in list:
    if int(element)<P_height:
        list.insert(counter,P_height)
        break
    count+=1
print(count+1)
#----------------------------------------------------

#task8-----------------------------------------------
"""
Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.
"""
count = 0
temp = 0
list = []
list = input().split(' ')
for element in list:
    if element != temp:
        temp = element
        count +=1
print(count)
#----------------------------------------------------

#task9-----------------------------------------------
"""
Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.).
Если элементов нечетное число, то последний элемент остается на своем месте.
"""
list = []
list = input().split(' ')
for i in range (1,len(list),2):
    temp = list[i-1]
    list[i-1] = list[i]
    list[i] = temp
print(" ".join(list))



#----------------------------------------------------

#task10----------------------------------------------
"""
В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.
"""
list = []
list = input().split(' ')
temp = 0
max_elem = max(list)
min_elem = min(list)
temp = list[list.index(max_elem)]
list[list.index(max_elem)] = list[list.index(min_elem)]
list[list.index(min_elem)] = temp
print(" ".join(list))


#----------------------------------------------------

#task11-----------------------------------------------
"""
Условие
Дан список из чисел и индекс элемента в списке k.
Удалите из списка элемент с индексом k, 
сдвинув влево все элементы, стоящие правее элемента с индексом k.
Программа получает на вход список, затем число k.
Программа сдвигает все элементы, а после этого удаляет последний 
элемент списка при помощи метода pop() без параметров.
Программа должна осуществлять сдвиг непосредственно в списке,
а не делать это при выводе элементов.
Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.
"""
list = []
list = input().split(' ')
k = int(input())
for i in range(k+1, len(list)):
	list[i-1] = list[i]
list.pop()
print(" ".join(list))

#----------------------------------------------------

#task12----------------------------------------------
"""
Дан список целых чисел, число k и значение C. 
Необходимо вставить в список на позицию с индексом k элемент, равный C,
сдвинув все элементы, имевшие индекс не менее k, вправо.
Посколько при этом количество элементов в списке увеличивается,
после считывания списка в его конец нужно будет добавить новый элемент,
используя метод append.
Вставку необходимо осуществлять уже в считанном списке, 
не делая этого при выводе и не создавая дополнительного списка.
"""
list = [int(counter) for counter in input().split()]
k, c = [int(counter) for counter in input().split()]
temp = c

for counter_2 in range(k, len(list)):
    list[counter_2], temp = temp, list[counter]
list.append(temp)

for counter in list:
    print(counter)
#----------------------------------------------------

#task13----------------------------------------------
"""
Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. 
Считается, что любые два 
элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
"""
list = []
count = 0
list = input().split(' ')
for i in list:

    for j in list:

        if i == j:

           count+=1

    count-=1
#----------------------------------------------------

#task14----------------------------------------------
"""
Дан список. Выведите те его элементы, которые встречаются в списке только один раз. 
Элементы нужно выводить в том порядке, в котором они встречаются в списке.
"""
list = []
list_new = []
list = input().split(' ')
for element in list:
    if element != temp:
        temp = element
        if list.count(temp) ==1:
            list_new.append(temp)
print(" ".join(list_new))
#----------------------------------------------------

#task15----------------------------------------------
"""
N кеглей выставили в один ряд, занумеровав их слева направо числами от 1 до N. 
Затем по этому ряду бросили K шаров, при этом i-й шар сбил все кегли с номерами от 
li до ri включительно. Определите, какие кегли остались стоять на месте.
Программа получает на вход количество кеглей N и количество бросков K. Далее идет K 
пар чисел li, ri, при этом 1≤ li≤ ri≤ N.
Программа должна вывести последовательность из N символов, где j-й символ есть “I”, если 
j-я кегля осталась стоять, или “.”, если j-я кегля была сбита.
"""
list_to_compare = [  ]
list_a = [  ]
pin_throw = input()
N = int ( pin_throw.split() [ 0 ] )
K = int ( pin_throw.split() [ 1 ] )
for j in range (1,N+1):
    list_to_compare.append(j)
for i in range ( K ) :
    row = input ("Input broken interval")
    left = int ( row.split ()[0] )
    right = int ( row.split()[1] )
    for i in range (left,right+1):
        list_a.append(i)
for element in list_to_compare:
    if element in list_a:
        print('.',end="")
    else:
        print('I',end="")
#----------------------------------------------------

#task16----------------------------------------------
"""
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы 
они не били друг друга. Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 
до 8 — координаты 8 ферзей. Если ферзи не бьют друг друга,выведите слово NO, иначе выведите YES.
"""
lst1 = []
lst2 = []
for i in range(8):
    s = input().split(' ')
    s[0] = int(s[0])
    s[1] = int(s[1])
    lst1.append(s[0])
    lst2.append(s[1])
if len(lst1) == len(set(lst1)) and len(lst2) == len(set(lst2)):
    print('NO')
else:
    print('YES')
#----------------------------------------------------


